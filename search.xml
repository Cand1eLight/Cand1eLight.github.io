<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>倒计时188天 | 口腹之慾也</title>
      <link href="/posts/3ec0eaad.html"/>
      <url>/posts/3ec0eaad.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>🌟 本周状态：盛夏备考，食欲与毅力的博弈</p></blockquote><p><img src="https://204180371.xyz/PicGo/0B85CAC8AE89DF131B90C39059AB4DCE.jpg" alt="封面"> </p><hr><h2 id="📊-核心进度总览"><a href="#📊-核心进度总览" class="headerlink" title="📊 核心进度总览"></a>📊 核心进度总览</h2><div class="table-container"><table><thead><tr><th>科目</th><th>当前进度</th><th>关键任务</th><th>预计完成时间</th></tr></thead><tbody><tr><td>线性代数</td><td>100%</td><td>错题整理 + 强化刷题</td><td>每日持续</td></tr><tr><td>操作系统</td><td>85%</td><td>教材完结 + 真题突破</td><td>两周内</td></tr><tr><td>英语</td><td>60%</td><td>单词清欠 + 阅读技巧强化</td><td>持续进行</td></tr></tbody></table></div><hr><h2 id="📈-详细进度可视化"><a href="#📈-详细进度可视化" class="headerlink" title="📈 详细进度可视化"></a>📈 详细进度可视化</h2><div class="pure-progress">  <div class="bar" style="width:100%; background:#4CAF50">线代 100%</div></div><div class="pure-progress">  <div class="bar" style="width:85%; background:#2196F3">操作系统 85%</div></div><div class="pure-progress">  <div class="bar" style="width:60%; background:#ff5722">英语 60%</div></div><hr><h2 id="📚-科目详情"><a href="#📚-科目详情" class="headerlink" title="📚 科目详情"></a>📚 科目详情</h2><h3 id="🔥-线性代数"><a href="#🔥-线性代数" class="headerlink" title="🔥 线性代数"></a>🔥 线性代数</h3><div class="simple-card">  <h4>当前状态：📚 收尾阶段</h4>  <div class="original-content">    今天主要还是进行线代的学习，线代理论知识的部分已经学完了，明天就要开始痛苦的刷题目了，刷提前希望能和秘密哥说的一样，通过A4纸总结一下对应章节的知识，然后再去惊醒刷题，A4纸总结大概花费半个小时吧，然后开始刷题目，既然开始刷题目了的话，每天都要保证复习错题，现在刷的题量上来了，温习错题的成本也不是很高，所以尽量还是温习一下错题，总觉得时间不够，又觉得需要多多往回看，多多复习，多多重复。  </div></div><h3 id="💻-操作系统"><a href="#💻-操作系统" class="headerlink" title="💻 操作系统"></a>💻 操作系统</h3><div class="simple-card">  <h4>当前状态：✅ 即将完结</h4>  <div class="original-content">    今天学习操作系统，操作系统也是接近完结的状态，我希望能够抓紧完结，最后的十四天，如果可以将操作系统和计网全部学完，暑假直接就能够开启二轮强化了。两个月，没有打扰的两个月还是有很大潜力的。  </div></div><h3 id="🌐-英语"><a href="#🌐-英语" class="headerlink" title="🌐 英语"></a>🌐 英语</h3><div class="simple-card">  <h4>当前状态：📝 词汇攻坚</h4>  <div class="original-content">    今天又开始了背单词的规律，但是之前欠的账太多了，太多没有复习的了，慢慢来吧，明天一口气给他复习掉。然后现在的视频也没啥意思了，明天吃饭的时候直接找一下唐迟的课看看吧，然后保持三天一篇真题的精读。差不多。  </div></div><hr><h2 id="🌸-深度总结"><a href="#🌸-深度总结" class="headerlink" title="🌸 深度总结"></a>🌸 深度总结</h2><div class="summary-card">  <div class="thought-section">    <i class="fas fa-stopwatch"></i>    <h4>时间管理</h4>    <div class="content">      今天的进度推进的不是很多，毕竟出去吃了顿饭，还是浪费了不少时间，但是吃顿饭也好，就当是在济南为自己的放假接风洗尘了，hhh，太不和谐了。    </div>  </div>  <div class="thought-section">    <i class="fas fa-book-open"></i>    <h4>学习节奏</h4>    <div class="content">      明天不能只写这些感受，也需要写当天学习到的知识点，希望后续找自习的位置能顺利一些吧，哎。    </div>  </div>  <div class="thought-section">    <i class="fas fa-road"></i>    <h4>未来展望</h4>    <div class="content">      两个月的黄金备考期即将到来，需要建立完整的知识体系。正如蝉鸣预示盛夏，此刻的努力终将结果。    </div>  </div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第十十一周复盘|又是一年夏，又是一年蝉鸣时</title>
      <link href="/posts/e5d46ecf.html"/>
      <url>/posts/e5d46ecf.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>🌟 本周状态：盛夏将至，学海无涯<br><img src="https://204180371.xyz/PicGo/ebe7d8cb-cb46-4b5d-bbf1-bd8ae97a25d1.png" alt="封面"></p></blockquote><hr><h2 id="📊-核心进度总览"><a href="#📊-核心进度总览" class="headerlink" title="📊 核心进度总览"></a>📊 核心进度总览</h2><div class="table-container"><table><thead><tr><th>科目</th><th>当前进度</th><th>关键任务</th><th>预计完成时间</th></tr></thead><tbody><tr><td>线性代数</td><td>90%</td><td>完结基础课程+制作知识大观</td><td>今日完成</td></tr><tr><td>计算机组成</td><td>100%</td><td>错题系统建立+难题突破</td><td>教材已完结</td></tr><tr><td>英语</td><td>70%</td><td>阅读训练体系化+外刊精读</td><td>持续进行</td></tr></tbody></table></div><hr><h2 id="📈-详细进度可视化"><a href="#📈-详细进度可视化" class="headerlink" title="📈 详细进度可视化"></a>📈 详细进度可视化</h2><div class="pure-progress">  <div class="bar" style="width:90%; background:#4CAF50">线代 90%</div></div><div class="pure-progress">  <div class="bar" style="width:100%; background:#2196F3">计算机 100%</div></div><div class="pure-progress">  <div class="bar" style="width:70%; background:#ff5722">英语 70%</div></div><hr><h2 id="📚-科目详情"><a href="#📚-科目详情" class="headerlink" title="📚 科目详情"></a>📚 科目详情</h2><h3 id="🔥-线性代数"><a href="#🔥-线性代数" class="headerlink" title="🔥 线性代数"></a>🔥 线性代数</h3><div class="simple-card">  <h4>当前状态：📚 收尾阶段</h4>  <div class="original-content">    线性代数基础阶段应该可以快完结了，目前还差最后一章二次型。今天努努力进行收尾，马上进行线性代数的综合总结。能形成一个对线性代数的大观，下周计划完成现代大观的学习，然后完成660b组题目，即完成660线代所有题目。说实话，因为打算一个劲听课打算把所有课程听完之后再进行刷题，所以导致后面很多概念产生了混淆，导致学的很混沌，计划是通过大观一步一步将所有的知识整合起来，根据调查得知，大观的上半部分是知识的介绍，下半部分是知识的应用，可以通过上半部分的大观进行知识的汇总，然后再去刷660。将线性代数的基础篇完结。  </div></div><h3 id="💻-计算机组成原理"><a href="#💻-计算机组成原理" class="headerlink" title="💻 计算机组成原理"></a>💻 计算机组成原理</h3><div class="simple-card">  <h4>当前状态：✅ 教材完结</h4>  <div class="original-content">    机组这周也是终于完结了，但是最后几章王道的排版实在是太糟糕了，导致学的也是很混乱，今天最后做一个综述的复习，不过综合下来的话机组是难度很大的，书没有操作系统厚，但是难度我却觉得高了很多，这还是在我上个学期学习过机组的基础上进行的判断。机组不管是小题还是大题都具有一些难题。慢慢来吧，考研就是一个重复的过程，多多重复。方能生巧，方可上战场。  </div></div><h3 id="🌐-英语"><a href="#🌐-英语" class="headerlink" title="🌐 英语"></a>🌐 英语</h3><div class="simple-card">  <h4>当前状态：📝 持续积累</h4>  <div class="original-content">    每周写一到两篇真题阅读吧，别的以新东方的那本书为主，主要是运用一下自己学到的技巧，然后看看效果如何。外刊的阅读时间可以适当的加进去，了解并且阅读外刊，主要还是为了保持语感吧。  </div></div><hr><h2 id="🌸-深度总结"><a href="#🌸-深度总结" class="headerlink" title="🌸 深度总结"></a>🌸 深度总结</h2><div class="summary-card">  <div class="thought-section">    <i class="fas fa-hourglass-half"></i>    <h4>整合之痛</h4>    <div class="content">      这两周也是将两本书进行了收尾，感觉很多书学到最后几章节的时候就会很难受，可能因为要整合之类的，导致学习的整合能力要求提高了，我现在的能力可能不足以对此进行很好的整合。所以最后几章的学习会显得很痛苦。    </div>  </div>  <div class="thought-section">    <i class="fas fa-seedling"></i>    <h4>崭新开始</h4>    <div class="content">      下周又要开新的内容了，所以说，下周又是崭新的开始，一切都会顺利的！    </div>  </div>  <div class="thought-section">    <i class="fas fa-tree"></i>    <h4>季节共鸣</h4>    <div class="content">      又是一年夏天，又是一年蝉鸣时。学习就像蝉的蜕变，经历黑暗才能破土而出。保持「重复是记忆之母」的信念，盛夏终将结果。    </div>  </div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第八九周总结 | 重回战场，撇出杂念，全心向前</title>
      <link href="/posts/c4f63702.html"/>
      <url>/posts/c4f63702.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>🌟 本周状态：重拾节奏，备战升级<br><img src="https://204180371.xyz/PicGo/4DC60BC07F9BBCDC149D9914499CAEBD.jpg" alt="封面"></p></blockquote><hr><h2 id="📊-核心进度总览"><a href="#📊-核心进度总览" class="headerlink" title="📊 核心进度总览"></a>📊 核心进度总览</h2><div class="table-container"><table><thead><tr><th>科目</th><th>当前进度</th><th>关键任务</th><th>预计完成时间</th></tr></thead><tbody><tr><td>线性代数</td><td>70%</td><td>完结基础课程，启动强化阶段</td><td>五一假期结束</td></tr><tr><td>计算机组成</td><td>60%</td><td>完结教材+错题系统建立</td><td>5月中旬</td></tr><tr><td>英语</td><td>50%</td><td>每日阅读+作文训练体系化</td><td>持续进行</td></tr></tbody></table></div><hr><h2 id="📈-详细进度可视化"><a href="#📈-详细进度可视化" class="headerlink" title="📈 详细进度可视化"></a>📈 详细进度可视化</h2><div class="pure-progress">  <div class="bar" style="width:70%; background:#4CAF50">线代 70%</div></div><div class="pure-progress">  <div class="bar" style="width:60%; background:#2196F3">计算机 60%</div></div><div class="pure-progress">  <div class="bar" style="width:50%; background:#ff5722">英语 50%</div></div><hr><h2 id="📚-科目详情"><a href="#📚-科目详情" class="headerlink" title="📚 科目详情"></a>📚 科目详情</h2><h3 id="🔥-高等数学"><a href="#🔥-高等数学" class="headerlink" title="🔥 高等数学"></a>🔥 高等数学</h3><div class="simple-card">  <h4>当前状态：🚀 强化前夕</h4>  <div class="original-content">    下周把线性代数完结，每天至少一节课，这周的线代进度也是比较缓慢，下周需要把时间多分配一下，不能荒废时间了，已经放纵太久了，浪费的不只是时间，还有学习的状态和精力，五一一定要找回自己的节奏然后把线性代数完结了，线代完结之后就要，买天蓝书，正式进入基础转强化的阶段，数二的压力感觉确实是有很多时间去精进自己的深度。线代还要听完大观，正式进入强化前夕。  </div></div><h3 id="💻-计算机组成原理"><a href="#💻-计算机组成原理" class="headerlink" title="💻 计算机组成原理"></a>💻 计算机组成原理</h3><div class="simple-card">  <h4>当前状态：🧩 稳扎稳打</h4>  <div class="original-content">    机组接下来的时间也一定要完结，一天要看二十页左右，最后可能会比较困难，但是时间上还是不是很紧张，还是要好好的复习之前的错题，稳扎稳打，慢慢形成一个队机组的大观，毕竟机组的大题比较多，所以复杂也是正常的。所以还是需要稳扎稳打，避免基础虚浮，数据结构也是要跟着复习，复习错题还是相对来说比较快的，把错题记录下来。  </div></div><h3 id="🌐-英语"><a href="#🌐-英语" class="headerlink" title="🌐 英语"></a>🌐 英语</h3><div class="simple-card">  <h4>当前状态：📝 持续积累</h4>  <div class="original-content">    英语的话也就是每天写写题目，然后背背单词，每天必须背40个单词，每天也必须写一篇阅读理解，保持状态。每天的吃饭抖音时间，变成学习作文以及阅读技巧的时间。还是要学习一些技巧并且付诸实际。作文的话，希望后续的时间可以每天都写一篇作文，慢慢优化自己的作文和写作翻译水平。我坚信英语就是积累的学科，每天一步，终究会抵达很远的地方。  </div></div><hr><h2 id="🌸-哲学性总结"><a href="#🌸-哲学性总结" class="headerlink" title="🌸 哲学性总结"></a>🌸 哲学性总结</h2><div class="summary-card">  <div class="thought-section">    <i class="fas fa-hourglass-half"></i>    <h4>认知维度</h4>    <div class="content">      本周以及上周说实话大部分的时间都花费掉了，我看了一路的风景，见了这天地，这天地不是局限于我周边的一片天地，更是广袤的天地，不论是为了什么，就是为了一缕春风，一抹美景，也要好好努力，看更大的世界，不辜负自己的人生啊。    </div>  </div>  <div class="thought-section">    <i class="fas fa-brain"></i>    <h4>痛苦哲学</h4>    <div class="content">      在这考研期间，我也算是见过了天地，现在要见自己了，如果可以的话，说不定以后能够偶尔更新一下每天复盘。    </div>  </div>  <div class="thought-section">    <i class="fas fa-balance-scale"></i>    <h4>未来展望</h4>    <div class="content">      话回到标题，把游戏删掉的时候并没有很多情绪，倒是更像是"不需要战斗了"的感叹，游戏和学习并无不同，都是为了规避生活的痛苦，学习是为了以后规避生活的痛苦，游戏是为了规避现在的痛苦，现在的痛苦和未来的痛苦都是痛苦，并无不同，没有优劣之分。    </div>  </div>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第七周复盘|迟到的复盘以及休闲的反思</title>
      <link href="/posts/a23f65c.html"/>
      <url>/posts/a23f65c.html</url>
      
        <content type="html"><![CDATA[<h1 id="第七周复盘-迟到的复盘以及休闲的反思"><a href="#第七周复盘-迟到的复盘以及休闲的反思" class="headerlink" title="第七周复盘|迟到的复盘以及休闲的反思"></a>第七周复盘|迟到的复盘以及休闲的反思</h1><p><img src="https://204180371.xyz/PicGo/449D5AD07010A9C15D7531AA401B3F5C.png" alt="封面"></p><blockquote><p>🌟 本周状态：蓝桥杯备战影响进度，下周需调整时间管理</p></blockquote><hr><h2 id="📈-学习进度仪表盘"><a href="#📈-学习进度仪表盘" class="headerlink" title="📈 学习进度仪表盘"></a>📈 学习进度仪表盘</h2><div class="pure-progress">  <div class="bar" style="width:80%; background:#4CAF50">高数 80%</div></div><div class="pure-progress">  <div class="bar" style="width:65%; background:#2196F3">机组 65%</div></div><div class="pure-progress">  <div class="bar" style="width:45%; background:#ff5722">英语 45%</div></div><hr><h2 id="📚-科目详情"><a href="#📚-科目详情" class="headerlink" title="📚 科目详情"></a>📚 科目详情</h2><h3 id="🔥-高等数学"><a href="#🔥-高等数学" class="headerlink" title="🔥 高等数学"></a>🔥 高等数学</h3><div class="simple-card">  <h4>当前状态：🔥 进入状态</h4>  <ul>    <li>基础部分推进顺利</li>    <li>策略：80%掌握 + 20%挑战题</li>    <li>预警：强化阶段需预留缓冲时间</li>  </ul>  <div class="original-content">    高数确实是有状态了，保持题目难度在自己大部分题目都会，然后小部分题目存在挑战的等级，感觉目前进度推的比较快，后续强化的话就难受了，但也不好说是不是会难受，循序渐进倒是感觉不要紧，希望下周玩的时候也能抽空写一些题目。  </div></div><h3 id="💻-计算机组成原理"><a href="#💻-计算机组成原理" class="headerlink" title="💻 计算机组成原理"></a>💻 计算机组成原理</h3><div class="simple-card">  <h4>当前状态：🚀 突破关键难点</h4>  <ul>    <li>第五章进行中</li>    <li>重点：错题重做系统（建议使用Anki）</li>    <li>Deadline：五月底完成基础阶段</li>  </ul>  <div class="original-content">    目前来看机组的难关已经跨过去了，要专注于复习之前的错题，下周应该能完成第五章，五月份之把机组结束吧  </div></div><h3 id="🌐-英语"><a href="#🌐-英语" class="headerlink" title="🌐 英语"></a>🌐 英语</h3><div class="simple-card">  <h4>当前状态：📝 阅读强化</h4>  <div class="original-content">    依旧保持每天背单词，但是每天要多写篇阅读，毕竟现在不需要准备蓝桥杯了，所以可以画更多的时间了，这周花了太多时间在蓝桥杯上面，导致进度没有什么进展  </div></div><hr><h2 id="🌸-本周总结"><a href="#🌸-本周总结" class="headerlink" title="🌸 本周总结"></a>🌸 本周总结</h2><blockquote><p>“真正的进步不是焦虑的自我怀疑，而是清醒的自我认知” —— 写给备考的自己</p><div class="simple-card">  <h4>总结与反思</h4>  <ul>    <li>每日增加1篇真题阅读</li>    <li>时间调整：原蓝桥杯时间转英语</li>    <li>技巧：长难句拆解训练</li>  </ul>  <div class="original-content">    这周好像也不能说是休闲的反思，只是花太多时间在蓝桥杯上面了，所以别的进度都有点落后了，下周又要和老姐出去玩，我尽量下周五之前把机组的第五章完结，能做到吗，可以的，周三半天没课，周四一天没课，我感觉我都能把第六章开个头，线代也能完结一半的课程，加油。这周写的好简短啊，确实是要写简短一点。  </div></div></blockquote><hr><h2 id="⏳-行动计划"><a href="#⏳-行动计划" class="headerlink" title="⏳ 行动计划"></a>⏳ 行动计划</h2><div class="table-container"><table><thead><tr><th>科目</th><th>任务</th><th>时间</th><th>状态</th></tr></thead><tbody><tr><td>高数</td><td>强化训练</td><td>4.15-4.17</td><td>✅进行中</td></tr><tr><td>机组</td><td>第五章收尾</td><td>4.17-4.19</td><td>🚀进行中</td></tr><tr><td>英语</td><td>阅读专项</td><td>4.18-4.21</td><td>📚待启动</td></tr></tbody></table></div><hr><p><small>本文共计1258字，预计阅读时间4分钟</small></p>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第六周复盘|但见旁人谈情何引诱，问到何时葡萄先熟透</title>
      <link href="/posts/1eca5682.html"/>
      <url>/posts/1eca5682.html</url>
      
        <content type="html"><![CDATA[<h1 id="第六周复盘-但见旁人谈情何引诱，问到何时葡萄先熟透"><a href="#第六周复盘-但见旁人谈情何引诱，问到何时葡萄先熟透" class="headerlink" title="第六周复盘 | 但见旁人谈情何引诱，问到何时葡萄先熟透"></a>第六周复盘 | 但见旁人谈情何引诱，问到何时葡萄先熟透</h1><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://204180371.xyz/PicGo/F30CDB9118921E52FC63E2E3D0ED74AE.jpg" alt="封面"></h2><h1 id="📑-目录"><a href="#📑-目录" class="headerlink" title="📑 目录"></a>📑 目录</h1><ul><li><a href="#第六周复盘--但见旁人谈情何引诱问到何时葡萄先熟透">第六周复盘 | 但见旁人谈情何引诱，问到何时葡萄先熟透</a><ul><li><a href="#"></a></li></ul></li><li><a href="#-目录">📑 目录</a></li><li><a href="#-高数节奏的微光">🌟 高数：节奏的微光</a></li><li><a href="#-机组缓步的旅人">💻 机组：缓步的旅人</a></li><li><a href="#-英语沉睡的种子">📚 英语：沉睡的种子</a></li><li><a href="#-蓝桥杯逐梦的战士">🏆 蓝桥杯：逐梦的战士</a></li><li><a href="#-总结微步中的希望">🌈 总结：微步中的希望</a></li></ul><h1 id="🌟-高数：节奏的微光"><a href="#🌟-高数：节奏的微光" class="headerlink" title="🌟 高数：节奏的微光"></a>🌟 高数：节奏的微光</h1><div class="note default flat"><p>这周，我终于摸到了高数学习的脉搏！跟着姜晓千的课程一路向前，课后直接开刷，基础题手到擒来，那种刷题的畅快感简直让人振奋。<br><strong>现在的感觉</strong>: 仿佛在迷雾中找到了一盏灯，步伐虽小，却坚定。<br><strong>下周计划</strong>:  </p><ul><li>完成高数基础部分（除数一外）  </li><li>保持专注、自律、慎独  </li></ul></div><blockquote><p><em>“你是那颗钻研的星，即使暗夜漫长，也终会闪耀。”</em></p></blockquote><hr><h1 id="💻-机组：缓步的旅人"><a href="#💻-机组：缓步的旅人" class="headerlink" title="💻 机组：缓步的旅人"></a>💻 机组：缓步的旅人</h1><div class="note default flat"><p>计算机组成原理这周推进得有些慢，时间大多被高数抢了风头。不过，学习之路没有大坎，依然在稳步前行。<br><strong>下周目标</strong>:  </p><ul><li><strong>第三章</strong>: 必须攻克！  </li><li><strong>第四章</strong>: 尽量跟上节奏  </li></ul></div><blockquote><p><em>“每一步，都是山川间的回响，别急，旅人总会抵达。”</em></p></blockquote><hr><h1 id="📚-英语：沉睡的种子"><a href="#📚-英语：沉睡的种子" class="headerlink" title="📚 英语：沉睡的种子"></a>📚 英语：沉睡的种子</h1><div class="note default flat"><p>这周英语进度真是掉队不少，阅读没跟上，单词也有些懈怠。不能再拖了，是时候唤醒它了！<br><strong>下周计划</strong>:  </p><ul><li>每天两篇阅读，不留余地  </li><li>单词背诵重回正轨  </li></ul></div><blockquote><p><em>“你是沉睡的种子，一场春雨，就能破土重生。”</em></p></blockquote><hr><h1 id="🏆-蓝桥杯：逐梦的战士"><a href="#🏆-蓝桥杯：逐梦的战士" class="headerlink" title="🏆 蓝桥杯：逐梦的战士"></a>🏆 蓝桥杯：逐梦的战士</h1><div class="note default flat"><p>从今天起，我要为蓝桥杯全力出击！<br><strong>每日任务</strong>:  </p><ul><li>刷题至少 <strong>3小时</strong><br><strong>五天目标</strong>:  </li><li>近三年题目全部扫荡一遍<br><strong>策略</strong>:  </li><li>不会就搜答案，反复背诵，直到烂熟于心  </li></ul></div><blockquote><p><em>“你是战场上的孤勇者，剑未出鞘，已光芒万丈。”</em></p></blockquote><hr><h1 id="🌈-总结：微步中的希望"><a href="#🌈-总结：微步中的希望" class="headerlink" title="🌈 总结：微步中的希望"></a>🌈 总结：微步中的希望</h1><div class="note default flat"><p>哎，这周的进度真是“微乎其微”。我总被杂事牵绊，忘了该专注的方向。<br><strong>反思</strong>:  </p><ul><li>专注力是我的软肋，得抓紧补强<br><strong>下周期望</strong>:  </li><li>找到抗干扰的秘诀，把进度追上来<br><strong>小创意</strong>:  </li><li>每周贴一张进度纸条，记录足迹  </li><li>任务没完成也没关系，慢慢调整，总会更好  </li></ul></div><blockquote><p><em>“你的努力如深海珍珠，藏于暗处，却终会熠熠生辉。”</em></p></blockquote><hr>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第五周复盘|状态初愈，藏锋试剑</title>
      <link href="/posts/d44e7711.html"/>
      <url>/posts/d44e7711.html</url>
      
        <content type="html"><![CDATA[<div align="center">🌟 **第五周复盘 | 状态初愈，藏锋试剑** 🌟</div><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://204180371.xyz/PicGo/14EE53CF046788CA64DB396B13CD2207.jpg" alt="封面图"></h2><h2 id="📚-高等数学：稳扎稳打，夯实基础"><a href="#📚-高等数学：稳扎稳打，夯实基础" class="headerlink" title="📚 高等数学：稳扎稳打，夯实基础"></a>📚 <strong>高等数学：稳扎稳打，夯实基础</strong></h2><p>这周我一直在刷积分题目，虽然过程很爽，但总觉得方向有点偏。于是决定调整策略，先把张宇1000题的课后习题好好写一遍，再结合真题练习。</p><h3 id="💡-本周反思与收获"><a href="#💡-本周反思与收获" class="headerlink" title="💡 本周反思与收获"></a>💡 <em>本周反思与收获</em></h3><blockquote><ul><li><strong>调整方向：</strong> 刷题虽爽，但基础题目不能忽视，之前有点“矫枉过正”了。  </li><li><strong>经验之谈：</strong> 经验帖里说积分题错了也没关系，重在见识和积累，我深有同感！  </li><li><strong>阶段感悟：</strong> 基础阶段和强化阶段其实没有绝对界限。基础打牢了，自然就能过渡到强化，而强化阶段则是通过疯狂刷题巩固知识、解锁高阶技巧。</li></ul></blockquote><h3 id="📅-下周计划"><a href="#📅-下周计划" class="headerlink" title="📅 下周计划"></a>📅 <em>下周计划</em></h3><div class="table-container"><table><thead><tr><th>任务</th><th>详情</th></tr></thead><tbody><tr><td><strong>回归进度</strong></td><td>二重积分要开始听大观的课了，稳步推进是关键。</td></tr><tr><td><strong>时间分配</strong></td><td>每天高数听课控制在1.5小时以内，多留时间看书和做题。</td></tr></tbody></table></div><hr><h2 id="💻-计算机组成原理：步步为营，攻克难关"><a href="#💻-计算机组成原理：步步为营，攻克难关" class="headerlink" title="💻 计算机组成原理：步步为营，攻克难关"></a>💻 <strong>计算机组成原理：步步为营，攻克难关</strong></h2><p>这周机组的前几章（主要是二进制部分）推进得很慢，计算量大，耗时不少。</p><h3 id="🔍-本周进展与难点"><a href="#🔍-本周进展与难点" class="headerlink" title="🔍 本周进展与难点"></a>🔍 <em>本周进展与难点</em></h3><ul><li><strong>挑战：</strong> 上课时没完全弄懂的内容，现在得花更多时间消化。  </li><li><strong>转机：</strong> 第二章结束后，感觉节奏会顺畅很多。</li></ul><h3 id="📅-下周计划-1"><a href="#📅-下周计划-1" class="headerlink" title="📅 下周计划"></a>📅 <em>下周计划</em></h3><ol><li><strong>目标：</strong> 争取推进到第三周，难度应该会降低一些。  </li><li><strong>复习：</strong> 抽空回顾前两章和数据结构的错题。  </li><li><strong>数据结构：</strong> 每天复习一章，错题少的话就多看一章，拉长复习跨度。</li></ol><hr><h2 id="📖-英语：回归节奏，积少成多"><a href="#📖-英语：回归节奏，积少成多" class="headerlink" title="📖 英语：回归节奏，积少成多"></a>📖 <strong>英语：回归节奏，积少成多</strong></h2><p>真题太难，学不到东西，我决定回归APP背单词和模拟题的舒适节奏。</p><h3 id="🌟-学习日常与目标"><a href="#🌟-学习日常与目标" class="headerlink" title="🌟 学习日常与目标"></a>🌟 <em>学习日常与目标</em></h3><ul><li><strong>日常安排：</strong>  <ul><li>每天背40个单词，记录重要词汇（包括阅读中的生词），总数控制在50个以内。  </li></ul></li><li><strong>长远目标：</strong>  <ul><li>考研英语必须考好，这是底线！  </li></ul></li><li><strong>小挑战：</strong>  <ul><li>初期背40个，后期复习强度可能增加，但用单词本养成习惯后，应该不难坚持。</li></ul></li></ul><hr><h2 id="🏆-蓝桥杯：学以致用，备战冲刺"><a href="#🏆-蓝桥杯：学以致用，备战冲刺" class="headerlink" title="🏆 蓝桥杯：学以致用，备战冲刺"></a>🏆 <strong>蓝桥杯：学以致用，备战冲刺</strong></h2><p>这周以学习为主，数学基础和数据结构的内容感觉不太契合我现在的定位。</p><h3 id="🚀-调整与期待"><a href="#🚀-调整与期待" class="headerlink" title="🚀 调整与期待"></a>🚀 <em>调整与期待</em></h3><ul><li><strong>策略：</strong> 最后两周学完几大算法后，重点转向多写题目。  </li><li><strong>目的：</strong> 学到的知识要用起来，多练习，确保能默写模板代码。  </li><li><strong>展望：</strong> 下周强度会明显提升，期待突破！</li></ul><hr><div align="center">## 🌈 **整体总结：拨云见日，迎接新生**  </div><h3 id="⚡-状态起伏"><a href="#⚡-状态起伏" class="headerlink" title="⚡ 状态起伏"></a>⚡ <em>状态起伏</em></h3><ul><li><strong>低谷：</strong> 上周和这周前几天状态很差，每天浑浑噩噩。  </li><li><strong>原因：</strong> 可能跟调理身体有关，除湿效果初显（舌苔不白了，肚子也小了些）。</li></ul><h3 id="🌟-展望与挑战"><a href="#🌟-展望与挑战" class="headerlink" title="🌟 展望与挑战"></a>🌟 <em>展望与挑战</em></h3><ul><li><strong>期待：</strong> 下周一定精神饱满，充满干劲！  </li><li><strong>压力：</strong> 下周课程安排密集，但我要努力挤出时间，<strong>加油</strong> 💪！</li></ul><hr><div align="center">## ✨ **尾声：砥砺前行，步履不停**  *这一周虽然状态有起伏，但通过调整和努力，我逐渐找回了节奏。下周，我将以更饱满的姿态迎接挑战，一步步向目标迈进！*</div><hr><h3 id="📌-实用小贴士"><a href="#📌-实用小贴士" class="headerlink" title="📌 实用小贴士"></a>📌 <em>实用小贴士</em></h3><ul><li><strong>生活：</strong> 保持良好作息和饮食，精神状态会更好。  </li><li><strong>学习：</strong> 合理规划时间，各科均衡推进。  </li><li><strong>英语：</strong> 坚持背单词，习惯养成后会有质的飞跃。</li></ul><hr><div align="center">### 💬 **自我鼓励**  *每一次复盘都是对自己的负责，每一次调整都让我离目标更近。加油，你是最棒的！*  </div>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第四周复盘|最低效的一周，迷茫阶段</title>
      <link href="/posts/58e1d8d8.html"/>
      <url>/posts/58e1d8d8.html</url>
      
        <content type="html"><![CDATA[<h1 id="第四周复盘-最低效的一周，迷茫阶段-🌫️"><a href="#第四周复盘-最低效的一周，迷茫阶段-🌫️" class="headerlink" title="第四周复盘 | 最低效的一周，迷茫阶段 🌫️"></a>第四周复盘 | 最低效的一周，迷茫阶段 🌫️</h1><p><img src="https://204180371.xyz/PicGo/10001.jpg" alt="封面图"></p><blockquote><p><em>“迷茫是成长的必经之路，关键是找到走出迷雾的方向。”</em> 🌟</p></blockquote><hr><h2 id="高等数学：在迷雾中寻找方向-📚"><a href="#高等数学：在迷雾中寻找方向-📚" class="headerlink" title="高等数学：在迷雾中寻找方向 📚"></a>高等数学：在迷雾中寻找方向 📚</h2><p>这周的高数学习陷入了迷茫期。面对众多学习资源和方法，我在各种视频教程间徘徊，却难以确定最适合自己的路径。最终，我决定回归 <strong>“真题 + 660”</strong> 的学习方式。</p><p>虽然帕拉梅宇建议先完成强化再刷题，但考虑到强化班尚未开课，我选择从积分部分的真题入手。今天花了很长时间才完成 25 道积分题。尽管大部分题目我已经较为熟练，但回看进度后发现效率仍然偏低。可能原因包括：</p><ul><li><strong>操作不够熟练</strong> 🤔</li><li><strong>真题难度较高，缺少简单的送分题</strong> 📈</li><li><strong>解题过程耗时较长</strong> ⏳</li></ul><p>这种高强度训练虽然让人感到吃力，但也充分锻炼了我的解题能力。下周我计划继续努力，争取每天完成 <strong>3页积分题目</strong>（对目前的我来说，确实是个不小的挑战）。如果只考数学二，压力会轻一些，也能更专注地打磨已学内容。💪</p><hr><h2 id="计算机组成原理：基础需要夯实-💻"><a href="#计算机组成原理：基础需要夯实-💻" class="headerlink" title="计算机组成原理：基础需要夯实 💻"></a>计算机组成原理：基础需要夯实 💻</h2><p>本周在机组学习中出错率较高，说明我对知识点的把握还不够准确。我认为不应局限于 2026 王道的课程，2025 的内容同样值得学习。与其坐等更新，不如主动出击。</p><p>机组是我比较有信心的学科，目前的重点是打好基础，因此不必太着急，只需稳扎稳打。🏗️</p><hr><h2 id="英语：真题驱动学习-📖"><a href="#英语：真题驱动学习-📖" class="headerlink" title="英语：真题驱动学习 📖"></a>英语：真题驱动学习 📖</h2><p>既然已经购买了“真题在线”会员，我便决定充分利用这个资源，坚持 <strong>每天刷一篇阅读</strong>。同时，我发现采用从真题入手的方式背单词效果很好，这种方法的改变正在逐步影响我对数学和其他学科的学习方法。🌍</p><hr><h2 id="蓝桥杯：基础算法进行时-🖥️"><a href="#蓝桥杯：基础算法进行时-🖥️" class="headerlink" title="蓝桥杯：基础算法进行时 🖥️"></a>蓝桥杯：基础算法进行时 🖥️</h2><p>蓝桥杯方面，本周我仅勉强掌握了基础算法，分治法还未开始接触。整体来看，这确实是一个低效的周期，主要时间花在了规划和准备上，加之身体小状况，导致精力有些不足。😓</p><hr><h2 id="总结与反思-🤔"><a href="#总结与反思-🤔" class="headerlink" title="总结与反思 🤔"></a>总结与反思 🤔</h2><p>这一周期的效率较低，大部分时间都耗费在了规划而非实际执行上。虽然刻意缩减了总结的字数，但由于完成的任务不多，内容显得较为简单。不过，每一次低效和迷茫的经历都是成长的一部分，帮助我更好地认识自身不足。📝</p><hr><h2 id="下周计划-📅"><a href="#下周计划-📅" class="headerlink" title="下周计划 📅"></a>下周计划 📅</h2><ol><li><strong>蓝桥杯</strong>：继续学习基础算法，争取全部掌握后开始刷题 🖥️</li><li><strong>英语</strong>：保持每天的训练节奏，继续刷阅读和背单词 📖</li><li><strong>数学</strong>：加大投入，提高解题效率，目标每天完成3页积分题 📚</li><li><strong>机组</strong>：在完成高数任务之余，稳步推进计算机组成原理的学习 💻</li></ol><hr><blockquote><p><em>“每一次迷茫后的坚持，都是通往成功的必经之路。”</em> 🌟</p></blockquote><p>希望通过这次的复盘，能够提醒自己持续进步，坚定信心迎接下周的新挑战！🚀</p>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯题目|岛屿数量-bfs思路分享</title>
      <link href="/posts/b5507141.html"/>
      <url>/posts/b5507141.html</url>
      
        <content type="html"><![CDATA[<h1 id="岛屿计数问题"><a href="#岛屿计数问题" class="headerlink" title="岛屿计数问题"></a>岛屿计数问题</h1><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>小蓝得到了一副大小为 $M \times N$ 的格子地图，可以将其视作一个只包含字符 ‘0’（代表海水）和 ‘1’（代表陆地）的二维数组。地图之外视为全部是海水，每个岛屿由上/下/左/右四个方向相邻的 ‘1’ 连接形成。</p><h3 id="关键定义"><a href="#关键定义" class="headerlink" title="关键定义"></a>关键定义</h3><ol><li><p><strong>环的定义</strong><br>在岛屿 $A$ 中，若存在 $k$ 个不同格子的排列 $(x<em>0, y_0), (x_1, y_1), \dots, (x</em>{k-1}, y_{k-1})$，满足：</p><ul><li>相邻格子（含首尾）通过上下左右移动一次可达</li><li>$x<em>{i+1 \mod k} = x_i + \Delta x$，$y</em>{i+1 \mod k} = y_i + \Delta y$（$\Delta x, \Delta y \in {-1, 0, 1}$）</li></ul></li><li><p><strong>子岛屿定义</strong><br>若岛屿 $B$ 的所有格子完全位于另一个岛屿 $A$ 的环内部，则 $B$ 是 $A$ 的子岛屿。子岛屿具有传递性（$B \subseteq A$, $C \subseteq B$ → $C \subseteq A$）。</p></li></ol><h3 id="问题要求"><a href="#问题要求" class="headerlink" title="问题要求"></a>问题要求</h3><p>统计地图上非子岛屿的岛屿数量。</p><h2 id="输入输出格式"><a href="#输入输出格式" class="headerlink" title="输入输出格式"></a>输入输出格式</h2><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">T</span><br><span class="line">M N</span><br><span class="line">map_row_1</span><br><span class="line">map_row_2</span><br><span class="line">...</span><br><span class="line">map_row_M</span><br></pre></td></tr></table></figure><ul><li><strong>T</strong>：测试用例数</li><li><strong>M, N</strong>：地图尺寸</li><li><strong>map_row_i</strong>：第i行的地图数据（仅含 ‘0’/‘1’）</li></ul><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result</span><br></pre></td></tr></table></figure><ul><li><strong>result</strong>：每组数据的岛屿数量</li></ul><h2 id="样例说明"><a href="#样例说明" class="headerlink" title="样例说明"></a>样例说明</h2><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">01111</span></span><br><span class="line"><span class="number">11001</span></span><br><span class="line"><span class="number">10101</span></span><br><span class="line"><span class="number">10001</span></span><br><span class="line"><span class="number">11111</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="number">111111</span></span><br><span class="line"><span class="number">100001</span></span><br><span class="line"><span class="number">010101</span></span><br><span class="line"><span class="number">100001</span></span><br><span class="line"><span class="number">111111</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="详细解释"><a href="#详细解释" class="headerlink" title="详细解释"></a>详细解释</h3><ol><li><p><strong>第一组数据</strong>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01111</span><br><span class="line">11001</span><br><span class="line">10201</span><br><span class="line">10001</span><br><span class="line">11111</span><br></pre></td></tr></table></figure><ul><li>岛屿2完全位于岛屿1的环内部 → 仅统计岛屿1</li></ul></li><li><p><strong>第二组数据</strong>  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">111111</span><br><span class="line">100001</span><br><span class="line">020301</span><br><span class="line">100001</span><br><span class="line">111111</span><br></pre></td></tr></table></figure><ul><li>岛屿1和2无环，岛屿3未被任何环包含 → 统计3个岛屿</li></ul></li></ol><h2 id="评测用例规模"><a href="#评测用例规模" class="headerlink" title="评测用例规模"></a>评测用例规模</h2><div class="table-container"><table><thead><tr><th>测试点</th><th>约束条件</th></tr></thead><tbody><tr><td>30%</td><td>$1 \leq M, N \leq 10$</td></tr><tr><td>100%</td><td>$1 \leq T \leq 10$, $1 \leq M, N \leq 50$</td></tr></tbody></table></div><h1 id="翻译题目"><a href="#翻译题目" class="headerlink" title="翻译题目"></a>翻译题目</h1><p>先翻译一下这个题目的意思啊，博主一开始看到什么k mod n得得得得，看的直接就是头昏脑涨，其实这个只是专业化描述，大概就是想高数中求极限啊，明明很简单就能说出来，但是要定义一个领域啊之类的，表示严谨嘛，但我们能理解题目要我们干什么就可以了，毕竟我们不是出题人（）</p><ul><li>地图是有边界的，边界外面全是海洋，也就是 ‘0’</li><li>如果一个连通体（所有能联通在一起的‘1’构成的连通体（也可以叫做 “岛屿”））的任意一个‘1’（陆地）能够通过一条路线到达地图外部的‘0’（海洋），那么就说明这个岛屿不是其他岛屿的子岛屿</li><li>反之，如果一个岛屿无法到达地图外部的海洋，那么就说明这个岛屿被更大的岛屿包裹了</li><li>最后，我们是需要求解真正岛屿（而非子岛屿）的数量</li></ul><h1 id="思路分析"><a href="#思路分析" class="headerlink" title="思路分析"></a>思路分析</h1><p>通过BFS遍历每个未访问的陆地格子，标记连通的岛屿。对每个岛屿，使用BFS检查其周围的水域是否能到达地图边界。若能到达边界，则该岛屿为独立岛屿（计入结果）；否则视为子岛屿（不计入）。</p><h1 id="答案代码"><a href="#答案代码" class="headerlink" title="答案代码"></a>答案代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">55</span>; <span class="comment">//题目范围要求 &gt;=50 才能AC，所以设置55，一定要多设置，如果设置50则只会AC30%</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ft first <span class="comment">//简写一下，蓝桥杯比赛环境不会自动补全，尽量简写一下，打字快的话也无所谓</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> sc second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pii pair<span class="string">&lt;int,int&gt;</span> <span class="comment">//定义一个pair用于存放当前的地图坐标</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> t[N][N];</span><br><span class="line"><span class="type">int</span> st[N][N];</span><br><span class="line"><span class="type">char</span> mp[N][N];</span><br><span class="line"><span class="type">int</span> dx[<span class="number">8</span>] = &#123;<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">-1</span>,<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">1</span> ,<span class="number">-1</span>,<span class="number">-1</span>&#125;; <span class="comment">//和y一起表示8个方向，因为即使是通过斜着的0能到达地图外也是成立的</span></span><br><span class="line"><span class="type">int</span> dy[<span class="number">8</span>] = &#123;<span class="number">0</span> ,<span class="number">1</span> ,<span class="number">0</span> ,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">1</span> ,<span class="number">-1</span>,<span class="number">1</span> &#125;;</span><br><span class="line"><span class="type">int</span> n,m,res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span> <span class="comment">//标记所有连通体</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue&lt;pii&gt; q; <span class="comment">//先设置一个队列，用于存放所有的坐标</span></span><br><span class="line">    q.<span class="built_in">push</span>(&#123;i,j&#125;); <span class="comment">//压入当前遍历的坐标（注意此处是有&#123;&#125;的）</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()) <span class="comment">//只要队列中还有坐标则说明还能继续“走”下去（此处假设bfs是一路走）</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = q.<span class="built_in">front</span>().ft; <span class="comment">//即取出刚刚压入的第一个元素也就是i</span></span><br><span class="line">        <span class="type">int</span> y = q.<span class="built_in">front</span>().sc;</span><br><span class="line"></span><br><span class="line">        q.<span class="built_in">pop</span>(); <span class="comment">//将当前的弹出，因为值已经赋给x和y了</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(t[x][y] == <span class="number">1</span>) <span class="comment">//如果岛屿被访问了，跳过</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        t[x][y] = <span class="number">1</span>; <span class="comment">//标记岛屿为访问过的岛屿</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">4</span>;i++) <span class="comment">//探查岛屿的四个方向</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> nx = x + dx[i];</span><br><span class="line">            <span class="type">int</span> ny = y + dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nx &lt; <span class="number">1</span> || ny &lt; <span class="number">1</span> || nx &gt; n || ny &gt; m || mp[nx][ny] == <span class="string">&#x27;0&#x27;</span> || t[nx][ny]) <span class="comment">//如果越界或者已经访问过了，或访问的为0，则跳过。此循环的目的是为了将该岛屿的所有陆地标记为‘1’，所以遇到0则跳过</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;nx,ny&#125;); <span class="comment">//如果下一个节点没有被跳过，则说明下一个节点也是陆地，继续压入队列，继续往前走</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span> <span class="comment">//检查该陆地能否通过一条路到达地图外</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queue&lt;pii&gt; q; <span class="comment">//前几步操作与bfs一样，只是换一个st数组存储</span></span><br><span class="line">    q.<span class="built_in">push</span>(&#123;i,j&#125;); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = q.<span class="built_in">front</span>().first;</span><br><span class="line">        <span class="type">int</span> y = q.<span class="built_in">front</span>().second;</span><br><span class="line"></span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(st[x][y] == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        st[x][y] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(x == <span class="number">1</span> || y == <span class="number">1</span> || x == n || y == m) <span class="comment">//如果顺利“走”到地图边界，则返回成功，说明这个岛屿是个独立的岛屿而非子岛屿</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; <span class="number">8</span>;i++) <span class="comment">//没到地图边界，接着走</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> nx = x + dx[i];</span><br><span class="line">            <span class="type">int</span> ny = y + dy[i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(nx &lt; <span class="number">1</span> || ny &lt; <span class="number">1</span> || nx &gt; n || ny &gt; m || mp[nx][ny] == <span class="string">&#x27;1&#x27;</span> || st[nx][ny]) <span class="comment">//如果超过地图边界或者访问过了或者走到了陆地，跳过。走到陆地说明撞墙了，没法到达外部大海</span></span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            </span><br><span class="line">            q.<span class="built_in">push</span>(&#123;nx,ny&#125;); <span class="comment">//没有到达地图边界也没有超限或者撞墙，则继续走下去</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">//q数组消耗完了，没有没走过的节点了，返回失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(t,<span class="number">0</span>,<span class="keyword">sizeof</span> t); <span class="comment">//将t数组中，长度为 “t数组长度”的空间设置为 0</span></span><br><span class="line">    res = <span class="number">0</span>; <span class="comment">//初始化 res</span></span><br><span class="line">    </span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m; <span class="comment">//读入地图大小</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= m;j++)</span><br><span class="line">            cin &gt;&gt; mp[i][j]; <span class="comment">//绘制地图</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!t[i][j] &amp;&amp; mp[i][j] == <span class="string">&#x27;1&#x27;</span>) <span class="comment">//如果没有被走过，且是陆地，进行后续判断</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">bfs</span>(i,j); <span class="comment">//标记该陆地所在岛屿的所有陆地</span></span><br><span class="line">                <span class="built_in">memset</span>(st,<span class="number">0</span>,<span class="keyword">sizeof</span> st); <span class="comment">//初始化st</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">check</span>(i,j)) <span class="comment">//检查是否能到达地图外，成功则使得结果++</span></span><br><span class="line">                    res++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>也没什么好总结的，东西都写在注释里面了，全都是博主一个字一个字打上去的，最后附上AC的结果图<br><img src="https://204180371.xyz/PicGo/20250318221708185.png" alt=""></p><p><strong>一个字一个字打真的很累，希望能够帮到你。这道题目博主也想了很久，最后才理清思路。</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三周复盘|感受天地之势，我的笔，便与天地合一</title>
      <link href="/posts/67946d22.html"/>
      <url>/posts/67946d22.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://204180371.xyz/PicGo/frieren-sousou-no-frieren-4k-wallpaper-uhdpaper.com-597@1@n.jpg" alt="分割线"></p><p>🔍 导航目录<br><a href="#学科总结">➤ 学科总结</a> | <a href="#时间分配">➤ 时间分配</a> | <a href="#下周计划">➤ 下周计划</a> | <a href="#箴言">➤ 本周箴言</a>  </p><h2 id="📚-学科总结"><a href="#📚-学科总结" class="headerlink" title="📚 学科总结"></a><span id="学科总结">📚 学科总结</span></h2><h3 id="📐-高等数学"><a href="#📐-高等数学" class="headerlink" title="📐 高等数学"></a>📐 高等数学</h3><p>这周关于高数确实是没有什么进展，写张宇的1000题感觉很多题目都不太写得动，而且一直错，这是最难受的，一直错，错多了就不想写了，课程不知道为什么听不进去，感觉学了和没有学一样，感觉很不好。</p><p>哈哈，似乎都是坏消息，但是也是有好消息的，积分的问题应该可以通过 积分大观来 完成进阶，而且我感觉帕拉说的很合理，张宇题目给的正反馈太少了，给我一种很憋屈的感觉。</p><p>我觉得下一周可以尝试一下武忠祥的课程，但是我又买了张宇26的书，感觉相较于25还是有进步的，至少1000题的重复率不是很高，也没有那么多的脑瘫题目。武忠祥的660倒是目前没有什么题目能够写，听到博主说880的题目质量好像比较高，我觉得下周可以试试。</p><p>张宇45年的这个确实是有些不太适应了，希望下周接触26的会有些好转，啊不对，下周是学习微分大观，虽然微分大观只有三四个小时，但是尽量每道题目都好好自己写一些，不知道是因为我看的题目比较简单时还是怎么回事，感觉up主讲得好快，而且前期的题目确实不是很复杂，还是花一些时间吧，毕竟都是真题，不存在偏难怪的情况，题目质量自然是比张宇的题目质量高一些的。</p><p>尽量三天内将积分大观完成学习吧，剩下的三天刷一下1000题，最后一天复习一下之前的660错题。加油，感觉帕拉说的方向很好</p><h3 id="🧠-数据结构"><a href="#🧠-数据结构" class="headerlink" title="🧠 数据结构"></a>🧠 数据结构</h3><p>本周数据结构确实是一种找到了感觉，但是很可惜本周没有和计划一样完成数据结构的学习，很可惜。</p><p>但是转念一想，如果为了赶上上周计划的进度，倒也不是不行，但是这样多少会有赶鸭子上架的念头，恐怕是没法将学习的完成度达到很高的，所以我还是决定稳扎稳打，下周周一将这一部分完成。</p><p>数据结构的进度也到末尾了，稍微总结一下吧，感觉数据结构写的很爽，甚至产生了像是依赖一样的东西，这也是拜高数所赐，因为高数实在是让我产生了抵触，高数的复杂晦涩难懂，毫无正反馈和数据结构产生明显的不同，数据结构给我一种只要学会思路就能够把题目写对的感觉，而且错的都是自己不会的，这种让自己查漏补缺的感觉很好，就好像是真的学到了东西，也了解到了正确的解法。</p><p>希望后续不管是计算机网络还是机组或者是操作系统都会给我这样的一种感觉，我觉得这种感觉很好，如果每门科目都能够以这种状态进行学习的话，我很肯定我会取得一个很好的成绩</p><p>本周确实找到了学习节奏📈，虽未按计划完成全部内容，但决定稳扎稳打：</p><ul><li>✅ 已掌握：树状结构遍历算法  </li><li>🔍 待加强：图论最短路径  </li><li>📅 计划完成：下周一收尾</li></ul><blockquote><p>💡 学习心得：<br>“数据结构给我一种只要学会思路就能够把题目写对的感觉，这种查漏补缺的体验就像在知识拼图中找到缺失的那一块”</p></blockquote><h3 id="🌍-英语"><a href="#🌍-英语" class="headerlink" title="🌍 英语"></a>🌍 英语</h3><p>说来惭愧，这周的英语时间实在是画的太少了，虽然嘴上说着不管考研英语圈的事情，但是多少感觉还是有些一些影响，感觉有点不想听田静的课程了，但是我觉得下周还是要听的，大概是这周蓝桥杯的准备时间挤压了英语的时间。</p><p>下周我决定每天来到自习室的第一件事情就是先完成当日英语的学习，对的，画一个小时，看半个小时语法，写半个小时阅读。因为说实话，英语并不是一个很难的板块，对我目前而言，所以作为每天的开始再好不过了。</p><p>不如就从简单开始，循序渐进的进入当天的学习。</p><p>📉 时间分配分析：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[语法]  ▰▰▰▱▱▱▱▱▱ 30%</span><br><span class="line">[阅读]  ▰▰▰▰▱▱▱▱▱ 40%</span><br><span class="line">[写作]  ▰▱▱▱▱▱▱▱▱ 10%</span><br></pre></td></tr></table></figure></p><p>🔔 改进方案：<br>⌛ 每日首个学习时段（建议8-9AM）专注英语<br>📌 使用番茄工作法（25分钟专注+5分钟休息）</p><h3 id="💻-蓝桥杯备赛"><a href="#💻-蓝桥杯备赛" class="headerlink" title="💻 蓝桥杯备赛"></a>💻 蓝桥杯备赛</h3><p>这个星期确实投入了远超上周的时间，还是在慢慢啃前期的东西，简单的东西，我觉得过了暴力的话后续的东西内容方面会缩减很多，不会在和现在一样花时间，主要现在每次搞懂一道题目都会画很多时间，包括问AI，或者自己理解代码的思维。但我相信，这种东西是有积累的，越到后面想必学的会越来越快。</p><p>加油，下周至少学完两个pdf吧，不算上目前暴力的pdf，感觉暴力的pdf后面东西不会很多了，加油。</p><p>📊 本周投入分布：<br>| 算法类型 | 时间占比 | 掌握程度 |<br>|————-|————|————-|<br>| 暴力破解 | 60%    | ▰▰▰▰▰   |<br>| DFS/BFS | 25%    | ▰▰▱▱▱   |<br>| 动态规划 | 15%    | ▰▱▱▱▱   |</p><p>🚀 下周目标：<br>完成两个专题PDF学习（图论+贪心算法）</p><h2 id="🌟-本周箴言"><a href="#🌟-本周箴言" class="headerlink" title="🌟 本周箴言"></a><span id="箴言">🌟 本周箴言</span></h2><blockquote><p>📌 “慢即是快，少即是多”<br>🔥 核心认知：<br>知识积累如同溪流汇海，看似缓慢的每日进步终将汇聚成磅礴的知识海洋🌊</p></blockquote><style>.progress {  height: 20px;  background-color: #f5f5f5;  border-radius: 10px;  margin: 15px 0;}.progress-bar {  height: 100%;  background: linear-gradient(90deg, #6c5ce7, #a8a4e6);  border-radius: 10px;  text-align: right;  padding-right: 10px;  color: white;  font-size: 12px;  line-height: 20px;}</style>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯题目|全球变暖 dfs解法思路分享</title>
      <link href="/posts/c563ecfe.html"/>
      <url>/posts/c563ecfe.html</url>
      
        <content type="html"><![CDATA[<h1 id="🌍-全球变暖问题：岛屿淹没统计-深度优先搜索实战"><a href="#🌍-全球变暖问题：岛屿淹没统计-深度优先搜索实战" class="headerlink" title="🌍 全球变暖问题：岛屿淹没统计 | 深度优先搜索实战"></a>🌍 全球变暖问题：岛屿淹没统计 | 深度优先搜索实战</h1><hr><h2 id="🎯-问题描述"><a href="#🎯-问题描述" class="headerlink" title="🎯 问题描述 "></a>🎯 问题描述 <a name="问题描述"></a></h2><p>给定一个 <code>N×N</code> 的海域照片，其中：</p><ul><li><code>.</code> 表示海洋</li><li><code>#</code> 表示陆地</li></ul><p>当一个岛屿（连通陆地）<strong>所有陆地像素</strong>的上下左右相邻位置中都至少有一个是海洋时，该岛屿会被完全淹没。要求统计会被完全淹没的岛屿数量。</p><p><strong>输入示例</strong>：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">.......</span><br><span class="line">.##....</span><br><span class="line">.##....</span><br><span class="line">....##.</span><br><span class="line">..####.</span><br><span class="line">...###.</span><br><span class="line">.......</span><br></pre></td></tr></table></figure></p><p>博主初看的时候看错题目了，我以为图中计算的是还有多少的<strong>陆地像素留下</strong>，结果最后才发现计算的是有<strong>多少个岛屿沉没了</strong>🥲<br>所以这个代码的思路是一个个的遍历图中的每一个节点，如果遍历过了就打上标记（v[x][y] = 1），并且先假设这个像素是安全的，然后遍历这个像素的上下左右四个节点，如果是安全的就将safe设置为1，然后接着递归的通过dfs搜索其四周的像素，只要有一个像素是安全的就说明这个岛屿不会沉没，不算在最后的结果中，但是如果迭代到最后safe都是0，则说明这个岛屿会沉没。</p><h2 id="🧠-解题思路"><a href="#🧠-解题思路" class="headerlink" title="🧠 解题思路 "></a>🧠 解题思路 <a name="解题思路"></a></h2><h3 id="双关键步骤解析"><a href="#双关键步骤解析" class="headerlink" title="双关键步骤解析"></a>双关键步骤解析</h3><ol><li><p><strong>岛屿遍历策略</strong> 🗺️</p><ul><li>使用 <strong>深度优先搜索(DFS)</strong> 遍历每个未访问的陆地像素</li><li>通过标记矩阵记录已访问区域，避免重复计算</li></ul></li><li><p><strong>淹没判定逻辑</strong> 🔍</p><ul><li>对每个陆地像素进行四方向海洋检测</li><li><strong>关键判断</strong>：只要存在一个陆地像素四面临陆，则整个岛屿不会被淹没</li></ul></li></ol><hr><h2 id="🖥️-代码实现"><a href="#🖥️-代码实现" class="headerlink" title="🖥️ 代码实现 "></a>🖥️ 代码实现 <a name="代码实现"></a></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义矩阵的边长</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="comment">// 存储海域矩阵，&#x27;.&#x27; 表示海洋，&#x27;#&#x27; 表示陆地</span></span><br><span class="line"><span class="type">char</span> m[<span class="number">1010</span>][<span class="number">1010</span>];</span><br><span class="line"><span class="comment">// 标记矩阵，用于记录每个位置是否已经被访问过</span></span><br><span class="line"><span class="type">int</span> v[<span class="number">1010</span>][<span class="number">1010</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="comment">// 定义四个方向的偏移量，分别为右、左、下、上</span></span><br><span class="line"><span class="type">int</span> d[<span class="number">4</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">-1</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">-1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="comment">// 标记当前岛屿是否存在安全的陆地，0 表示不存在，1 表示存在</span></span><br><span class="line"><span class="type">int</span> safe;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查坐标 (x, y) 是否在合法范围内（矩阵内）</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isValid</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt;= <span class="number">1</span> &amp;&amp; x &lt;= n &amp;&amp; y &gt;= <span class="number">1</span> &amp;&amp; y &lt;= n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 深度优先搜索函数，用于遍历一个岛屿</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 标记当前位置 (x, y) 为已访问</span></span><br><span class="line">    v[x][y] = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 假设当前陆地是安全的，即不会被淹没</span></span><br><span class="line">    <span class="type">bool</span> issafe = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查当前陆地的上下左右四个相邻位置</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 计算相邻位置的坐标</span></span><br><span class="line">        <span class="type">int</span> nx = x + d[i][<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> ny = y + d[i][<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 检查相邻位置是否在合法范围内且为海洋</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isValid</span>(nx, ny) &amp;&amp; m[nx][ny] == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果相邻位置是海洋，说明当前陆地不安全</span></span><br><span class="line">            issafe = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">// 只要有一个相邻位置是海洋，就不用继续检查其他相邻位置了</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果当前陆地是安全的，说明该岛屿存在安全的陆地</span></span><br><span class="line">    <span class="keyword">if</span> (issafe) &#123;</span><br><span class="line">        <span class="comment">// 将 safe 标记为 1，表示该岛屿不会被完全淹没</span></span><br><span class="line">        safe = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 继续递归搜索当前陆地的上下左右四个相邻陆地</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 计算相邻位置的坐标</span></span><br><span class="line">        <span class="type">int</span> nx = x + d[i][<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> ny = y + d[i][<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// 检查相邻位置是否在合法范围内、未被访问过且为陆地</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isValid</span>(nx, ny) &amp;&amp; m[nx][ny] == <span class="string">&#x27;#&#x27;</span> &amp;&amp; v[nx][ny] == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 递归调用 dfs 函数，继续搜索该相邻陆地所在的岛屿</span></span><br><span class="line">            <span class="built_in">dfs</span>(nx, ny);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 读取矩阵的边长</span></span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="comment">// 读取海域矩阵的每一行</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            cin &gt;&gt; m[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于统计会被完全淹没的岛屿数量</span></span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 遍历整个海域矩阵</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="comment">// 找到未被访问过的陆地</span></span><br><span class="line">            <span class="keyword">if</span> (m[i][j] == <span class="string">&#x27;#&#x27;</span> &amp;&amp; v[i][j] == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 假设当前岛屿会被完全淹没，将 safe 初始化为 0</span></span><br><span class="line">                safe = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// 从当前陆地开始进行深度优先搜索，遍历整个岛屿</span></span><br><span class="line">                <span class="built_in">dfs</span>(i, j);</span><br><span class="line">                <span class="comment">// 如果遍历完整个岛屿后 safe 仍然为 0，说明该岛屿没有安全的陆地，会被完全淹没</span></span><br><span class="line">                <span class="keyword">if</span> (safe == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">// 会被完全淹没的岛屿数量加 1</span></span><br><span class="line">                    cnt++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输出会被完全淹没的岛屿数量</span></span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="📊-复杂度分析"><a href="#📊-复杂度分析" class="headerlink" title="📊 复杂度分析 "></a>📊 复杂度分析 <a name="复杂度分析"></a></h2><div class="table-container"><table><thead><tr><th>维度</th><th>复杂度</th><th>说明</th></tr></thead><tbody><tr><td><strong>时间复杂度</strong></td><td>O(N²)</td><td>每个网格节点访问一次</td></tr><tr><td><strong>空间复杂度</strong></td><td>O(N²)</td><td>存储访问标记矩阵</td></tr><tr><td><strong>最优情况</strong></td><td>Ω(N²)</td><td>必须遍历所有节点</td></tr></tbody></table></div><hr><h2 id="🔍-测试用例"><a href="#🔍-测试用例" class="headerlink" title="🔍 测试用例 "></a>🔍 测试用例 <a name="测试用例"></a></h2><h3 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">.......</span><br><span class="line">.##....</span><br><span class="line">.##....</span><br><span class="line">....##.</span><br><span class="line">..####.</span><br><span class="line">...###.</span><br><span class="line">.......</span><br></pre></td></tr></table></figure><h1 id="AC结果图"><a href="#AC结果图" class="headerlink" title="AC结果图"></a>AC结果图</h1><p><img src="https://204180371.xyz/PicGo/20250315173029010.png" alt=""></p><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="图示说明"><a href="#图示说明" class="headerlink" title="图示说明"></a>图示说明</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">初始海域：</span><br><span class="line">.......</span><br><span class="line">.##.... → 存在岛屿</span><br><span class="line">.##....</span><br><span class="line">....##.</span><br><span class="line">..####. → 存在中心安全陆地</span><br><span class="line">...###.</span><br><span class="line">.......</span><br><span class="line"></span><br><span class="line">输出说明：</span><br><span class="line">只有中心岛屿存在安全陆地，其他岛屿都会被淹没</span><br></pre></td></tr></table></figure><hr><h2 id="❓-常见问题"><a href="#❓-常见问题" class="headerlink" title="❓ 常见问题 "></a>❓ 常见问题 <a name="常见问题与注意事项"></a></h2><h3 id="Q1：如何处理边界情况？"><a href="#Q1：如何处理边界情况？" class="headerlink" title="Q1：如何处理边界情况？"></a>Q1：如何处理边界情况？</h3><p><strong>A</strong>: 使用在条件判断中严格检查坐标合法性，防止数组越界，越界的话也是过不了样例的😭</p><h3 id="Q2：为什么使用全局变量？"><a href="#Q2：为什么使用全局变量？" class="headerlink" title="Q2：为什么使用全局变量？"></a>Q2：为什么使用全局变量？</h3><p><strong>A</strong>: 简化DFS参数传递，但需要注意多测试用例时的重置问题</p><h3 id="Q3：算法优化方向？"><a href="#Q3：算法优化方向？" class="headerlink" title="Q3：算法优化方向？"></a>Q3：算法优化方向？</h3><ul><li><strong>并行处理</strong>：对独立岛屿进行并行DFS</li><li><strong>空间优化</strong>：使用位压缩存储访问标记</li></ul><hr><h2 id="🏆-总结"><a href="#🏆-总结" class="headerlink" title="🏆 总结 "></a>🏆 总结 <a name="总结"></a></h2><ol><li><strong>核心技巧</strong>：DFS遍历 + 四方向安全检测</li><li><strong>易错点</strong>：<ul><li>边界条件处理</li><li>岛屿连通性判断</li></ul></li><li><strong>扩展应用</strong>：该算法框架可应用于其他连通区域分析问题</li></ol><hr><h1 id="希望对你有所帮助"><a href="#希望对你有所帮助" class="headerlink" title="希望对你有所帮助"></a>希望对你有所帮助</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二周复盘|听不到世界的声音，就是和自身交流</title>
      <link href="/posts/e23ea06e.html"/>
      <url>/posts/e23ea06e.html</url>
      
        <content type="html"><![CDATA[<h1 id="📚第二周复盘-听不到世界的声音，就是和自身交流🎉✨"><a href="#📚第二周复盘-听不到世界的声音，就是和自身交流🎉✨" class="headerlink" title="📚第二周复盘|听不到世界的声音，就是和自身交流🎉✨"></a>📚第二周复盘|听不到世界的声音，就是和自身交流🎉✨</h1><p><img src="https://204180371.xyz/PicGo/20250309205801661.png" alt="学习封面"><br><em><center>🕰️ 2025-03-09 | 📌 标签：#考研 #复盘 </center></em></p><hr><h2 id="高等数学-🧮"><a href="#高等数学-🧮" class="headerlink" title="高等数学 🧮"></a>高等数学 🧮</h2><p><strong>本周学习情况:</strong> 本周主要精力放在刷题上! 虽然已经学习了基础数学，但解题能力并没有显著提高，看来刷题需要长期积累! 🤔</p><p><strong>目标与计划:</strong> 目前能够应付基础660题，但1000题的套路还没完全掌握。打算先从最新版本的660题入手，逐步提升解题能力! 💪  刷题效率有待提高，目前还处于基础阶段! 🌱</p><p><strong>学习方法:</strong>  如果10分钟内解不出题，就看答案，并分析解题思路! 💡 错题要在10分钟内重新做出来! ✍️</p><hr><h2 id="数据结构-💻"><a href="#数据结构-💻" class="headerlink" title="数据结构 💻"></a>数据结构 💻</h2><p><strong>学习感受:</strong> 数据结构的学习让我感到非常愉悦! 😄就像高中时期学习生物一样，感觉很轻松，也很享受这个过程，仿佛进入了心流状态! 🧘‍♀️ <br> 几乎每道题都能独立完成，感觉不复杂，写起来很舒服! 😊</p><p><strong>下周计划:</strong> 下周争取完成数据结构部分! 加油! 💪</p><hr><h2 id="英语-📚"><a href="#英语-📚" class="headerlink" title="英语 📚"></a>英语 📚</h2><p><strong>基础语法:</strong> 田静老师的基础语法确实太简单了，对于我来说，速通简单句部分完全没问题! 😎</p><p><strong>下周计划:</strong> 下周开始学习长难句，增加阅读量到每天两篇! 📖  如果强度仍然不够，我会考虑限制做题时间，提升解题速度! ⏱️</p><p><strong>问题与改进:</strong> 目前解题速度较慢，总是追求最稳妥的答案，导致花费时间较长。需要进行限时训练! ⏰</p><hr><h2 id="下周学习计划-🗓️"><a href="#下周学习计划-🗓️" class="headerlink" title="下周学习计划 🗓️"></a>下周学习计划 🗓️</h2><p><strong>时间规划:</strong>  第一周对时间安排不太清晰，但这周我对时间消耗有了更准确的认识。下周要根据时间合理规划学习内容! 🤓  <br>如果没有课程，每天至少学习8小时（包含30分钟的通勤时间），每多一节课减少半小时学习时间。</p><p><strong>每日安排:</strong> 每天早上计划好当天的学习内容! 📝</p><hr><h2 id="蓝桥杯-🏆"><a href="#蓝桥杯-🏆" class="headerlink" title="蓝桥杯 🏆"></a>蓝桥杯 🏆</h2><p><strong>学习资源:</strong> 我已经找到了相关的速成课程! 👍</p><p><strong>学习时间:</strong> 为了取得好成绩，每天至少学习2小时，安排在晚上! 🌃</p><p><strong>每日安排:</strong> 上午高等数学，下午数据结构，晚上蓝桥杯和英语，晚上也安排高等数学的补习时间! 🤓</p><hr><h2 id="最后的思考-🤔"><a href="#最后的思考-🤔" class="headerlink" title="最后的思考 🤔"></a>最后的思考 🤔</h2><blockquote><p>上周学习的主题是宫本武藏，本周借用佐佐木小次郎的经历来激励自己!  🔥佐佐木小次郎是一位天才剑客，天生聋哑，却能专注于剑道，进入心流状态! 🧘‍♂️ <br> 为了提高效率，下周我会改变学习习惯，不再边听歌边刷题，只听纯音乐或不听音乐，只有休息时才听一首歌! 🎶 期待下周能够高效学习! 🚀</p></blockquote><hr><p style="text-align: right;">希望这个总结能够帮助我更好地规划接下来的学习，也希望能够持续保持高效的学习状态!  ✨</p>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一周复盘 | 心如果被吸引，手上的剑就挥不出</title>
      <link href="/posts/b1980b8a.html"/>
      <url>/posts/b1980b8a.html</url>
      
        <content type="html"><![CDATA[<h1 id="📚-第一周复盘-心如果被吸引，手上的剑就挥不出"><a href="#📚-第一周复盘-心如果被吸引，手上的剑就挥不出" class="headerlink" title="📚 第一周复盘 | 心如果被吸引，手上的剑就挥不出"></a>📚 第一周复盘 | 心如果被吸引，手上的剑就挥不出</h1><p><img src="https://204180371.xyz/PicGo/b02e629a3e74d0c1b618d1d292e6d780_720.jpeg" alt="学习封面"><br><em><center>🕰️ 2025-01-30 | 📌 标签：#考研 #复盘 #时间管理</center></em></p><hr><h2 id="📌-本周进展"><a href="#📌-本周进展" class="headerlink" title="📌 本周进展"></a>📌 本周进展</h2><h3 id="📐-高等数学"><a href="#📐-高等数学" class="headerlink" title="📐 高等数学"></a>📐 高等数学</h3><ul><li>✅ 完成第九章内容汇总</li><li>📖 武忠祥教材 &amp; 张宇讲义双线推进</li><li>🚩 下周重点：积分大题突破（武忠祥基础题未覆盖部分）</li></ul><h3 id="📖-英语攻坚"><a href="#📖-英语攻坚" class="headerlink" title="📖 英语攻坚"></a>📖 英语攻坚</h3><ul><li>🧠 每日20新词 + 滚动复习</li><li>🚶♂️ 碎片化学习：通勤/就餐背单词</li><li>📘《句句真研》进度：4天35页 → 周目标60页（三月完结全书）</li></ul><h3 id="💻-数据结构（408）"><a href="#💻-数据结构（408）" class="headerlink" title="💻 数据结构（408）"></a>💻 数据结构（408）</h3><ul><li>🎯 当前进度：50%核心内容</li><li>📅 二轮计划：重点突破大题</li><li>🔥 目标：3月中旬完成一轮小题复习</li></ul><hr><h2 id="🏆-蓝桥杯备战"><a href="#🏆-蓝桥杯备战" class="headerlink" title="🏆 蓝桥杯备战"></a>🏆 蓝桥杯备战</h2><ul><li>⚙️ 启动系统性刷题</li><li>🕒 剩余时间：30天</li><li>💡 策略：保持每日高强度训练</li></ul><hr><h2 id="🔧-项目进展"><a href="#🔧-项目进展" class="headerlink" title="🔧 项目进展"></a>🔧 项目进展</h2><ul><li>✅ 上交项目阶段暂时告一段落</li><li>张老师还是很开明的，希望最后考研能取得一个好的成果，最后也能和张老师学更多东西。</li></ul><hr><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>结语的话就用刷到的抖音里面的演讲的一句话结束吧，割麦子之所以割的快，是因为弯腰从不直起来，一直弯着腰割着稻草，自然就会很快，有一次直起来，就会有无数次直起来，所以，把腰一直弯下去吧，当把腰直起来的时候，就回不去了。</p><h2 id="💭-本周思考"><a href="#💭-本周思考" class="headerlink" title="💭 本周思考"></a>💭 本周思考</h2><blockquote><p>🌾 <strong>割麦哲学</strong><br>“弯腰的节奏决定收割速度，<br>直腰的诱惑如同复习时的分心，<br>一次妥协就会形成惯性。<br>真正的专注是把调试状态成本归零。”</p></blockquote><center>✨ 保持弓弦满月的状态，直到箭矢破空而出 ✨</center>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 复盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Acwing 字符串章末数题总结</title>
      <link href="/posts/56b22553.html"/>
      <url>/posts/56b22553.html</url>
      
        <content type="html"><![CDATA[<h2 id="📝-题目-1：字符串的最小乘方单位"><a href="#📝-题目-1：字符串的最小乘方单位" class="headerlink" title="📝 题目 1：字符串的最小乘方单位"></a>📝 题目 1：字符串的最小乘方单位</h2><h3 id="📌-题目解析"><a href="#📌-题目解析" class="headerlink" title="📌 题目解析"></a>📌 题目解析</h3><p>上述代码用于求解 <strong>字符串的乘方</strong>，计算字符串的 <strong>最小乘方单位</strong>，即判断字符串是否由某个子串重复若干次构成，并找出最大的重复次数。</p><h3 id="💡-代码实现"><a href="#💡-代码实现" class="headerlink" title="💡 代码实现"></a>💡 代码实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string a;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(cin &gt;&gt; a &amp;&amp; a != <span class="string">&quot;.&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> len = a.<span class="built_in">size</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> n = len;n;n--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(len % n == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> m = len / n;</span><br><span class="line">                string s = a.<span class="built_in">substr</span>(<span class="number">0</span>,m);</span><br><span class="line">                string str;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++) </span><br><span class="line">                    str += s;</span><br><span class="line">                <span class="keyword">if</span>(str == a)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="🔍-代码思路"><a href="#🔍-代码思路" class="headerlink" title="🔍 代码思路"></a>🔍 代码思路</h3><ol><li><strong>循环读取输入字符串</strong>，直到输入的字符串为 <code>&quot;.&quot;</code> 结束。</li><li><strong>获取字符串长度 <code>len</code></strong>，然后从 <code>len</code> 开始倒序遍历，找到最大的 <code>n</code>，使得 <code>len</code> 能被 <code>n</code> 整除。</li><li><strong>计算 <code>m = len / n</code></strong>，即每个重复单元的长度（从 <code>1</code> 开始，逐步增加）。</li><li><strong>提取字符串的前 <code>m</code> 个字符</strong> 作为重复单元 <code>s</code>。</li><li><strong>构造新字符串 <code>str</code></strong>，用 <code>s</code> <strong>重复 <code>n</code> 次</strong> 进行匹配。</li><li><strong>判断 <code>str</code> 是否等于 <code>a</code></strong>，如果相等，则 <code>n</code> 即为最大周期，输出 <code>n</code> 并终止循环。</li><li><strong>遍历方式</strong>：<ul><li><strong>外层循环</strong> 负责找 <code>n</code>，从最大可能的周期开始，保证找到的是<strong>最大的 <code>n</code></strong>。</li><li><strong>内层循环</strong> 负责构造 <code>str</code>，确保 <code>str</code> 是否与 <code>a</code> 一致。</li></ul></li></ol><h3 id="🚀-示例测试"><a href="#🚀-示例测试" class="headerlink" title="🚀 示例测试"></a>🚀 示例测试</h3><div class="table-container"><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td><code>abab</code></td><td><code>2</code></td></tr><tr><td><code>aaaa</code></td><td><code>4</code></td></tr><tr><td><code>abcabcabc</code></td><td><code>3</code></td></tr></tbody></table></div><h3 id="✨-代码优化"><a href="#✨-代码优化" class="headerlink" title="✨ 代码优化"></a>✨ 代码优化</h3><ul><li><strong>从 <code>len</code> 开始遍历 <code>n</code></strong>，保证找到<strong>最大的 <code>n</code></strong>。</li><li><strong>整除判断优化</strong>，只对 <code>len</code> 可被 <code>n</code> 整除的 <code>n</code> 进行检测，减少无效计算。</li><li><strong>更高效方案</strong>（如 <code>KMP</code>），可用 <code>next</code> 数组快速找到最小循环单位。</li></ul><hr><h2 id="📝-题目-2：求解字符串之间的最大距离"><a href="#📝-题目-2：求解字符串之间的最大距离" class="headerlink" title="📝 题目 2：求解字符串之间的最大距离"></a>📝 题目 2：求解字符串之间的最大距离</h2><h3 id="📌-题目解析-1"><a href="#📌-题目解析-1" class="headerlink" title="📌 题目解析"></a>📌 题目解析</h3><p>本题的目标是 <strong>求解两个子串 <code>s1</code> 和 <code>s2</code> 在 <code>s</code> 中出现的最远间隔</strong>，即 <code>s1</code> 在 <code>s</code> 中的最早出现位置 <code>l</code>，<code>s2</code> 在 <code>s</code> 中的最晚出现位置 <code>r</code>，求 <code>r - l - 1</code>。</p><h3 id="💡-代码实现-1"><a href="#💡-代码实现-1" class="headerlink" title="💡 代码实现"></a>💡 代码实现</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> c;</span><br><span class="line">    string s, s1, s2;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 读取字符串</span></span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; c, c != <span class="string">&#x27;,&#x27;</span>) s += c;</span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; c, c != <span class="string">&#x27;,&#x27;</span>) s1 += c;</span><br><span class="line">    <span class="built_in">getline</span>(cin, s2);  <span class="comment">// ✅ 解决终端卡住的问题</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果 s 的长度小于 s1 或 s2，直接返回 -1</span></span><br><span class="line">    <span class="keyword">if</span> (s.<span class="built_in">size</span>() &lt; s<span class="number">1.</span><span class="built_in">size</span>() || s.<span class="built_in">size</span>() &lt; s<span class="number">2.</span><span class="built_in">size</span>())</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 找到 s1 在 s 中的起始位置</span></span><br><span class="line">        <span class="keyword">while</span> (l + s<span class="number">1.</span><span class="built_in">size</span>() &lt;= s.<span class="built_in">size</span>()) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (k &lt; s<span class="number">1.</span><span class="built_in">size</span>()) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[k + l] != s1[k])  <span class="comment">// ✅ 修正索引</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (k == s<span class="number">1.</span><span class="built_in">size</span>())  <span class="comment">// 如果匹配完整 s1</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> r = s.<span class="built_in">size</span>() - s<span class="number">2.</span><span class="built_in">size</span>();</span><br><span class="line">        <span class="comment">// 找到 s2 在 s 中的末尾匹配位置</span></span><br><span class="line">        <span class="keyword">while</span> (r &gt;= <span class="number">0</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (k &lt; s<span class="number">2.</span><span class="built_in">size</span>()) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (s[r + k] != s2[k]) <span class="comment">// ✅ 修正索引</span></span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (k == s<span class="number">2.</span><span class="built_in">size</span>())  <span class="comment">// 如果匹配完整 s2</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            r--;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        l += s<span class="number">1.</span><span class="built_in">size</span>() - <span class="number">1</span>;  <span class="comment">// 调整 l 位置</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算中间间隔</span></span><br><span class="line">        <span class="keyword">if</span> (l &gt;= r)</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, r - l - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="🔍-代码思路-1"><a href="#🔍-代码思路-1" class="headerlink" title="🔍 代码思路"></a>🔍 代码思路</h3><ol><li><strong>读取字符串 <code>s</code></strong>，子串 <code>s1</code> 和 <code>s2</code>。</li><li><strong>边界条件判断</strong>：<ul><li>如果 <code>s</code> 的长度 <strong>小于 <code>s1</code> 或 <code>s2</code></strong>，直接输出 <code>-1</code>。</li></ul></li><li><strong>寻找 <code>s1</code> 在 <code>s</code> 中的起始位置 <code>l</code></strong>：<ul><li>从 <code>0</code> 开始遍历 <code>s</code>，找到 <code>s1</code> <strong>首次匹配的位置</strong>。</li><li>通过 <code>while</code> 循环和 <code>k</code> 变量 <strong>检测子串是否匹配</strong>。</li></ul></li><li><strong>寻找 <code>s2</code> 在 <code>s</code> 中的末尾位置 <code>r</code></strong>：<ul><li>从 <code>s.size() - s2.size()</code> 开始倒序遍历 <code>s</code>，找到 <code>s2</code> <strong>最后一次出现的位置</strong>。</li></ul></li><li><strong>计算最终距离</strong>：<ul><li>由于 <code>l</code> 记录的是 <code>s1</code> 的 <strong>起始位置</strong>，因此 <code>l += s1.size() - 1</code> 进行调整。</li><li>计算 <code>r - l - 1</code>，如果 <code>l &gt;= r</code>，说明 <code>s1</code> 在 <code>s2</code> 之后或二者重叠，输出 <code>-1</code>，否则输出 <strong>最大距离</strong>。</li></ul></li></ol><h3 id="🚀-示例测试-1"><a href="#🚀-示例测试-1" class="headerlink" title="🚀 示例测试"></a>🚀 示例测试</h3><div class="table-container"><table><thead><tr><th>输入</th><th>输出</th></tr></thead><tbody><tr><td><code>abcde,bc,d</code></td><td><code>1</code></td></tr><tr><td><code>helloworld,hello,world</code></td><td><code>0</code></td></tr><tr><td><code>abcabcabc,abc,c</code></td><td><code>4</code></td></tr><tr><td><code>abc,abcd,xyz</code></td><td><code>-1</code></td></tr></tbody></table></div><h3 id="✨-代码优化-1"><a href="#✨-代码优化-1" class="headerlink" title="✨ 代码优化"></a>✨ 代码优化</h3><ul><li><strong>提前判断 <code>s1</code> 和 <code>s2</code> 是否可能存在</strong>，减少计算量。</li><li><strong>双指针优化</strong>，可以在 <code>O(n)</code> 复杂度下找到 <code>s1</code> 和 <code>s2</code> 的最远距离，提升效率。</li></ul><hr><h2 id="🔗-结语"><a href="#🔗-结语" class="headerlink" title="🔗 结语"></a>🔗 结语</h2><p>这两道题目都是<strong>AcWing 字符串题目</strong>中的经典案例：</p><ul><li><strong>第一题</strong> 主要考察 <strong>字符串的周期性</strong>，涉及 <strong>字符串匹配、周期检测</strong> 等内容。</li><li><strong>第二题</strong> 主要考察 <strong>字符串子串匹配和间距计算</strong>，需要熟练掌握 <strong>字符串遍历和索引管理</strong>。</li></ul><h2 id="Acwing题目索引号：777、778"><a href="#Acwing题目索引号：777、778" class="headerlink" title="Acwing题目索引号：777、778"></a>Acwing题目索引号：777、778</h2><p>📌 <strong>如果觉得这篇总结有帮助，记得收藏 &amp; 分享！😊</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随机封面测试</title>
      <link href="/posts/bf5247c3.html"/>
      <url>/posts/bf5247c3.html</url>
      
        <content type="html"><![CDATA[<p>诶多……☆是♡同♡类♡呢♡喵♪（由乃逆光捧脸.jpg）那群八嘎是不会懂的呀……关于「二次元の美好」♡呐，如果说吾の存在有意义的话、那一定是因为「二·次·元」吧☆？所以呢——妄图污染这份「爱」的人类、都会被吾「抹」「杀」「掉」喔♪（小声）嘛……讨厌二次元的八嘎三次元最恶心了啊魂淡！★</p><p>呐、二次元の民那……都·是·最·最·善·良·の·存·在·呐☆多洗忒……要「嘲笑」这样的孩子呢？吾辈不明白啊——？嘛……说到底，你们都只是污秽の「来自三次元的大人」吧？大人什么的、最·讨·厌·了★♪</p><p>啊嘞啊嘞QAQ？多洗忒……欧尼酱ww？呐、桥豆麻袋……已经「厌烦」吾辈了嘛？哼唧……真是「冷·酷·の·人」呢QuQ——☆(๑°⌓°๑)嘛……即便是这样的哇达西，一定也是有「存·在·の·意·义」的吧、内~★快来「肯定」啊？不然呀……咱可就要「黑化」了哦♪呐？#(太开心)</p><p>呐。。。（伸出的小手又迅速垂下去）嗦嘎（表情有点失落），米娜桑已经不喜欢了呀（紧咬嘴唇），得磨，米娜桑忘了当初吗（握紧小手），莫以得丝（强忍住眼泪），已经大丈夫了呦（挤出笑脸），瓦大喜瓦，滋多滋多，滋多滋多（语气越来越用力了）滋多戴斯给！！！一滋嘛叠磨瓦撕裂嘛赛！！！至死都不会瓦斯裂嘛斯（认真的表情）</p><p>诶多……看起来阁下对于「二·次·元」の理解、似·乎·满·是·谬·误·哦☆~！嘛，连最为基本の「礼♪义♪廉♪耻♪」都早已失去了啊……♪（笑）呐，我说啊——这样のkimino、也会有自称「二♡次♡元」の资格吗★？fufufu——说到底、阁下已经「二·次·元·失·格」了吧？呐~♪#(太开心)</p><p>唔噗噗~汝等「劣·等·生·物」……也配去「妄想」吗？呐、「真正的二次元」什么的— —吾辈看汝是一点都不懂啊☆ （笑）嘛嘛嘛……不过看着汝试图伪装成「二次元」の可笑姿态，倒是让吾辈对于「三·次·元·的·白·痴」稍微有了些许兴趣哦？★【图片】诶多……☆是♡同♡类♡呢♡喵♪（由乃逆光捧脸.jpg）那群八嘎是不会懂的呀……关于「二次元の美好」♡呐，如果说吾の存在有意义的话、那一定是因为「二·次·元」吧☆？所以呢——妄图污染这份「爱」的人类、都会被吾「抹」「杀」「掉」喔♪（小声）嘛……讨厌二次元的八嘎三次元最恶心了啊魂淡！★</p><p>呐、二次元の民那……都·是·最·最·善·良·の·存·在·呐☆多洗忒……要「嘲笑」这样的孩子呢？吾辈不明白啊——？嘛……说到底，你们都只是污秽の「来自三次元的大人」吧？大人什么的、最·讨·厌·了★♪</p><p>啊嘞啊嘞QAQ？多洗忒……欧尼酱ww？呐、桥豆麻袋……已经「厌烦」吾辈了嘛？哼唧……真是「冷·酷·の·人」呢QuQ——☆(๑°⌓°๑)嘛……即便是这样的哇达西，一定也是有「存·在·の·意·义」的吧、内~★快来「肯定」啊？不然呀……咱可就要「黑化」了哦♪呐？</p><p>呐。。。（伸出的小手又迅速垂下去）嗦嘎（表情有点失落），米娜桑已经不喜欢了呀（紧咬嘴唇），得磨，米娜桑忘了当初吗（握紧小手），莫以得丝（强忍住眼泪），已经大丈夫了呦（挤出笑脸），瓦大喜瓦，滋多滋多，滋多滋多（语气越来越用力了）滋多戴斯给！！！一滋嘛叠磨瓦撕裂嘛赛！！！至死都不会瓦斯裂嘛斯（认真的表情）</p><p>诶多……看起来阁下对于「二·次·元」の理解、似·乎·满·是·谬·误·哦☆~！嘛，连最为基本の「礼♪义♪廉♪耻♪」都早已失去了啊……♪（笑）呐，我说啊——这样のkimino、也会有自称「二♡次♡元」の资格吗★？fufufu——说到底、阁下已经「二·次·元·失·格」了吧？呐~♪</p><p>唔噗噗~汝等「劣·等·生·物」……也配去「妄想」吗？呐、「真正的二次元」什么的— —吾辈看汝是一点都不懂啊☆ （笑）嘛嘛嘛……不过看着汝试图伪装成「二次元」の可笑姿态，倒是让吾辈对于「三·次·元·的·白·痴」稍微有了些许兴趣哦？★【图片】诶多……☆是♡同♡类♡呢♡喵♪（由乃逆光捧脸.jpg）那群八嘎是不会懂的呀……关于「二次元の美好」♡呐，如果说吾の存在有意义的话、那一定是因为「二·次·元」吧☆？所以呢——妄图污染这份「爱」的人类、都会被吾「抹」「杀」「掉」喔♪（小声）嘛……讨厌二次元的八嘎三次元最恶心了啊魂淡！★</p><p>呐、二次元の民那……都·是·最·最·善·良·の·存·在·呐☆多洗忒……要「嘲笑」这样的孩子呢？吾辈不明白啊——？嘛……说到底，你们都只是污秽の「来自三次元的大人」吧？大人什么的、最·讨·厌·了★♪</p><p>啊嘞啊嘞QAQ？多洗忒……欧尼酱ww？呐、桥豆麻袋……已经「厌烦」吾辈了嘛？哼唧……真是「冷·酷·の·人」呢QuQ——☆(๑°⌓°๑)嘛……即便是这样的哇达西，一定也是有「存·在·の·意·义」的吧、内~★快来「肯定」啊？不然呀……咱可就要「黑化」了哦♪呐？#(太开心)</p><p>吶吶吶，米娜桑，扣祢起哇，瓦込西二刺猿の焼酒嚏!あああ，辻我仞一-起守択，最好の二刺猿肥!吶吶，不憧我的，愚蠢の人炎們呵，果畔那塞，我二刺猿の焼酒是不会和祢有共同語言的jio豆麻袋,込祥子垪活有什幺錯喝?吶,告泝我呵。搜嚆,祢仞已経不喜炊了呵..真是冷酷の人昵,果鮮納塞,止祢看到不愉快のな西了。像我送祥的人,果然消失就好了昵。也午只有在二次元的世界里,オ有真正的美好存在的肥,吶?ねぇねぇねぇ，果然灰悪了呵，帯jio不，瓦込西，二刺猿の焼酒!博古哇zeidei不会人輸!米娜桑!吶!瓦込西二刺猿ぁぁ!哦晦吻扣賽伊弓斯!吶吶吶!米娜桑!我要幵劫了~一キ打去咢死!诶多诶多~「多洗忒」?为什么要「妄.图.抹.杀」这样的「自己」呢?★(笑)呐、「中二病的你」也好、「二次元的你」也好….「全部」daisuki~呐~二次元民那赛高desuwa!今后也.请.多.多.指.教.喔?~啊啊……是♡鲜♡血♡の♡味♡道♡呐♡~！（眯眼笑）kukuku——汝の「血」、会是什么样的「气味」呢☆？诶多多~说着说着有些期待了呢♪品尝「挚·爱·之·人」の「鲜血」什么的~嘛……如果是「你」的话，一定可以的!</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>About</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h2 id="👋-Hi，我是祝炩烟！"><a href="#👋-Hi，我是祝炩烟！" class="headerlink" title="👋 Hi，我是祝炩烟！"></a><strong>👋 Hi，我是祝炩烟！</strong></h2><p>💡 我的签名是 <strong>“会当身由己，婉转入江湖”</strong>，这也是我的博客副标题！希望能在这个博客里，记录我的成长、探索与思考。</p><hr><h2 id="📜-关于本站"><a href="#📜-关于本站" class="headerlink" title="📜 关于本站"></a><strong>📜 关于本站</strong></h2><p>🎈 <strong>CandleLight 博客</strong>(<a href="https://cand1elight.github.io)是一个综合性的个人技术">https://cand1elight.github.io)是一个综合性的个人技术</a> &amp; 学术 &amp; 生活博客，主要分享：</p><ul><li><strong>💻 代码技术</strong>（Hexo/Vue/前端开发）</li><li><strong>📜 学习记录</strong>（日常学习、论文写作）</li><li><strong>📸 生活碎片</strong>（Plog、二次元安利）</li></ul><p>本站采用 <strong>Hexo + Butterfly 主题</strong>，如果你喜欢我的内容，欢迎交流～ 🥳</p><hr><h2 id="🛠️-博客配置"><a href="#🛠️-博客配置" class="headerlink" title="🛠️ 博客配置"></a><strong>🛠️ 博客配置</strong></h2><p>💻 <strong>博客搭建</strong>：</p><ul><li><strong>框架</strong>：Hexo + Butterfly</li><li><strong>前端</strong>：Vue、Tailwind CSS</li><li><strong>后端</strong>：Node.js</li><li><strong>存储</strong>：PicGo + 图床</li></ul><p>📡 <strong>访问方式</strong>：</p><ul><li>🌐 <strong>主站地址</strong>：<a href="https://cand1elight.github.io/">https://cand1elight.github.io/</a></li><li>📖 <strong>GitHub 博客仓库</strong>：<a href="https://github.com/Cand1eLight">GitHub</a></li></ul><hr><h2 id="🌈-个人兴趣"><a href="#🌈-个人兴趣" class="headerlink" title="🌈 个人兴趣"></a><strong>🌈 个人兴趣</strong></h2><p><strong>动漫 🎬</strong>：喜欢《葬送的芙莉莲》《EVA》《BanG Dream!It’s MyGO!!!!!》</p><p><strong>音乐 🎧</strong>：二次元 OST，Lo-Fi，chill</p><p><strong>运动 🏸</strong>：羽毛球、乒乓球</p><p><strong>数码 🖥️</strong>：编程、DIY 机械键盘、开源项目  </p><p><strong>游戏 🕹️</strong>：荒野大镖客2、艾尔登法环、黑神话悟空、星际拓荒、P5R</p><hr><h2 id="📮-联系我"><a href="#📮-联系我" class="headerlink" title="📮 联系我"></a><strong>📮 联系我</strong></h2><p>✉️ <strong>Email</strong>：<a href="204180371@qq.com">204180371@qq.com</a><br>💬 <strong>B 站</strong>：<a href="https://space.bilibili.com/3546557553052060">https://space.bilibili.com/3546557553052060</a>  </p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!(function (c) {    var l,      h,      a,      t,      i,      v =        '<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',      o = (o = document.getElementsByTagName("script"))[o.length - 1].getAttribute("data-injectcss"),      p = function (c, l) {        l.parentNode.insertBefore(c, l);      };    if (o && !c.__iconfont__svg__cssinject__) {      c.__iconfont__svg__cssinject__ = !0;      try {        document.write(          "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"        );      } catch (c) {        console && console.log(c);      }    }    function d() {      i || ((i = !0), a());    }    function m() {      try {        t.documentElement.doScroll("left");      } catch (c) {        return void setTimeout(m, 50);      }      d();    }    (l = function () {      var c,        l = document.createElement("div");      (l.innerHTML = v),        (v = null),        (l = l.getElementsByTagName("svg")[0]) &&          (l.setAttribute("aria-hidden", "true"),          (l.style.position = "absolute"),          (l.style.width = 0),          (l.style.height = 0),          (l.style.overflow = "hidden"),          (l = l),          (c = document.body).firstChild ? p(l, c.firstChild) : c.appendChild(l));    }),      document.addEventListener        ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)          ? setTimeout(l, 0)          : ((h = function () {              document.removeEventListener("DOMContentLoaded", h, !1), l();            }),            document.addEventListener("DOMContentLoaded", h, !1))        : document.attachEvent &&          ((a = l),          (t = c.document),          (i = !1),          m(),          (t.onreadystatechange = function () {            "complete" == t.readyState && ((t.onreadystatechange = null), d());          }));  })(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;  }    div#menus {    font-family: "ZhuZiAYuanJWD";  }  h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;    color: #3b70fc; /* 设置标题颜色为蓝色 */  }  a.article-title,  a.blog-slider__title,  a.categoryBar-list-link,  h1.post-title {    font-family: ZhuZiAYuanJWD;  }    .iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;  }    /* 时间轴生肖icon */  svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;  }    .icon-zhongbiao::before {    color: #f7c768;  }    /* bilibli番剧插件 */  #article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;  }  a.bangumi-tab:hover {    text-decoration: none !important;  }  .bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;  }  a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;  }  .bangumi-button {    padding: 5px 10px !important;  }    a.bangumi-tab {    padding: 5px 10px !important;  }  svg.icon.faa-tada {    font-size: 1.1em;  }  .bangumi-info-item {    border-right: 1px solid #f2b94b;  }  .bangumi-info-item span {    color: #f2b94b;  }  .bangumi-info-item em {    color: #f2b94b;  }    /* 解决artitalk的图标问题 */  #uploadSource > svg {    width: 1.19em;    height: 1.5em;  }    /*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */  #page-header:not(.not-top-img):before {    background-color: transparent !important;  }    /* 首页文章卡片 */  #recent-posts > .recent-post-item {    background: rgba(255, 255, 255, 0.9);  }    /* 首页侧栏卡片 */  #aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);  }    /* 文章页面正文背景 */  div#post {    background: rgba(255, 255, 255, 0.9);  }    /* 分页页面 */  div#page {    background: rgba(255, 255, 255, 0.9);  }    /* 归档页面 */  div#archive {    background: rgba(255, 255, 255, 0.9);  }    /* 标签页面 */  div#tag {    background: rgba(255, 255, 255, 0.9);  }    /* 分类页面 */  div#category {    background: rgba(255, 255, 255, 0.9);  }    /*夜间模式伪类遮罩层透明*/  [data-theme="dark"] #recent-posts > .recent-post-item {    background: #121212;  }    [data-theme="dark"] .card-widget {    background: #121212 !important;  }    [data-theme="dark"] div#post {    background: #121212 !important;  }    [data-theme="dark"] div#tag {    background: #121212 !important;  }    [data-theme="dark"] div#archive {    background: #121212 !important;  }    [data-theme="dark"] div#page {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: #121212 !important;  }    [data-theme="dark"] div#category {    background: transparent !important;  }  /* 页脚透明 */  #footer {    background: transparent !important;  }    /* 头图透明 */  #page-header {    background: transparent !important;  }    #rightside > div > button {    border-radius: 5px;  }    /* 滚动条 */    ::-webkit-scrollbar {    width: 10px;    height: 10px;  }    ::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;  }    ::-webkit-scrollbar-corner {    background-color: transparent;  }    ::-moz-selection {    color: #fff;    background-color: #3b70fc;  }    /* 音乐播放器 */    /* .aplayer .aplayer-lrc {    display: none !important;  } */    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */  }    .aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */  }    .aplayer.aplayer-fixed {    z-index: 999999 !important;  }    /* 评论框  */  .vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;  }    /* 设置评论框 */    .vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;  }    /* md网站下划线 */  #article-container a:hover {    text-decoration: none !important;  }    #article-container #hpp_talk p img {    display: inline;  }    /* 404页面 */  #error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);  }    #error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;  }    #error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;  }    #error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;  }  #error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;  }  #error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;  }  #error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);  }    #body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;  }    #body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;  }    #body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;  }    #body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;  }    #body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;  }    #body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;  }    #body-wrap.error .aside-list .aside-list-item .content time {    display: none;  }    /* 代码框主题 */  #article-container figure.highlight {    border-radius: 10px;  }/*后加的*//* 进度条样式 */.pure-progress {  height: 1.2rem;  background: #f0f0f0;  border-radius: 0.6rem;  margin: 1rem 0;  box-shadow: inset 0 1px 3px rgba(0,0,0,0.1);}.bar {  height: 100%;  border-radius: 0.6rem;  transition: width 0.5s ease;  display: flex;  align-items: center;  padding: 0 1rem;  color: white;  font-weight: 500;  justify-content: space-between;}/* 卡片样式 */.simple-card {  padding: 1.5rem;  background: #ffffff;  border: 1px solid #eee;  border-radius: 10px;  box-shadow: 0 2px 10px rgba(0,0,0,0.05);  margin: 1rem 0;}.simple-card h4 {  border-bottom: 2px solid #4CAF50;  padding-bottom: 0.5rem;  margin-bottom: 1rem;  color: #333;}/* 表格优化 */.post-content table {  width: 100%;  border-collapse: collapse;  margin: 1.5rem 0;  box-shadow: 0 2px 10px rgba(0,0,0,0.05);}.post-content th,.post-content td {  padding: 0.8rem;  text-align: left;  border-bottom: 1px solid #eee;}.post-content tr:hover {  background-color: #f8f9fa;}/* 全局样式 */.post-content a {  color: #4CAF50;  text-decoration: underline;  transition: all 0.3s;}.post-content pre {  background: #2d2d2d;  border-radius: 8px;  padding: 1.2rem;}.post-content img {  box-shadow: 0 4px 12px rgba(0,0,0,0.1);  border-radius: 8px;  margin: 1rem 0;}/*后加的*//* 表格样式 */.post-content table {  width: 100%;  margin: 1.5rem 0;  border-collapse: collapse;  box-shadow: 0 2px 6px rgba(0,0,0,0.05);}.post-content th {  background: #4CAF50;  color: white;  padding: 0.8rem;  text-align: left;}.post-content td {  border: 1px solid #eee;  padding: 0.8rem;}.post-content tr:nth-child(even) {  background: #f8f9fa;}/* 任务列表 */.simple-card ul {  list-style: square;  margin-left: 1.5rem;}/* 代码块样式 */.simple-card code {  background: #f0f0f0;  padding: 0.2rem 0.4rem;  border-radius: 4px;}/* 响应式表格 */@media (max-width: 768px) {  .post-content table {    display: block;    overflow-x: auto;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {    // 设置起始时间    var startTime = new Date("01/27/2025 00:00:00");    now.setTime(now.getTime() + 250);    // 计算运行时间    var days = Math.floor((now - startTime) / 1e3 / 60 / 60 / 24); // 运行天数    var hours = Math.floor(((now - startTime) / 1e3 / 60 / 60) % 24); // 运行小时数    var minutes = Math.floor(((now - startTime) / 1e3 / 60) % 60); // 运行分钟数    var seconds = Math.round(((now - startTime) / 1e3) % 60); // 运行秒数    // 格式化为两位数    hours = hours < 10 ? "0" + hours : hours;    minutes = minutes < 10 ? "0" + minutes : minutes;    seconds = seconds < 10 ? "0" + seconds : seconds;    // 根据时间段设置显示内容    let displayContent = "";    if (hours >= 9 && hours < 18) {        displayContent = `            <img class='boardsign' src='https://204180371.xyz/PicGo/PixPin_2025-01-28_12-33-09.png' title='加油喵！'>            <span class='textTip'>                <br> 本站居然运行了 ${days} 天            </span>            <span id='runtime'> ${hours} 小时 ${minutes} 分 ${seconds} 秒 </span>            <i class='fas fa-heartbeat' style='color:red'></i>        `;    } else {        displayContent = `            <img class='boardsign' src='https://204180371.xyz/PicGo/PixPin_2025-01-28_12-31-48.png' title='休息喵……'>            <span class='textTip'>                <br> 本站居然运行了 ${days} 天            </span>            <span id='runtime'> ${hours} 小时 ${minutes} 分 ${seconds} 秒 </span>            <i class='fas fa-heartbeat' style='color:red'></i>        `;    }    // 更新页面内容    const workboard = document.getElementById("workboard");    if (workboard) {        workboard.innerHTML = displayContent;    }}// 每 250 毫秒更新一次setInterval(() => {    createtime();}, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.min.js"/>
      <url>/js/runtime/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now = new Date; function createtime() { var t = new Date("04/01/2021 00:00:00"); now.setTime(now.getTime() + 250); var e = (now - t) / 1e3 / 60 / 60 / 24, a = Math.floor(e), n = (now - t) / 1e3 / 60 / 60 - 24 * a, r = Math.floor(n); 1 == String(r).length && (r = "0" + r); var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r, i = Math.floor(s); 1 == String(i).length && (i = "0" + i); var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i, l = Math.round(o); 1 == String(l).length && (l = "0" + l); let g = ""; g = r < 18 && r >= 9 ? `<img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.3/img/badge/安知鱼-上班摸鱼中.svg' title='距离月入25k也就还差一个大佬带我~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>` : `<img class='boardsign' src='https://npm.elemecdn.com/anzhiyu-blog@2.0.3/img/badge/安知鱼-下班啦.svg' title='下班了就该开开心心的玩耍，嘿嘿~'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`, document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = g) } setInterval((() => { createtime() }), 250);]]></content>
      
    </entry>
    
    
  
</search>
